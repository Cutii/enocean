{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.1","compilation":{"directory":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53],"program":"/Users/pmirabel/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","csv","/Users/pmirabel/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.0.5/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=a9b590efea780b48","-C","extra-filename=-a9b590efea780b48","--out-dir","/Users/pmirabel/workspace_rs/domotic_enocean_cutii/target/rls/debug/deps","-L","dependency=/Users/pmirabel/workspace_rs/domotic_enocean_cutii/target/rls/debug/deps","--extern","csv_core=/Users/pmirabel/workspace_rs/domotic_enocean_cutii/target/rls/debug/deps/libcsv_core-a375e550fab971f7.rmeta","--extern","serde=/Users/pmirabel/workspace_rs/domotic_enocean_cutii/target/rls/debug/deps/libserde-bc5f849efcab4404.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/pmirabel/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,119,111,114,107,115,112,97,99,101,95,114,115,47,100,111,109,111,116,105,99,95,101,110,111,99,101,97,110,95,99,117,116,105,105,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,99,115,118,45,97,57,98,53,57,48,101,102,101,97,55,56,48,98,52,56,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"csv","disambiguator":[6384365213090281704,14316967931289029491]},"crate_root":"/Users/pmirabel/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.0.5/src","external_crates":[{"file_name":"/Users/pmirabel/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.0.5/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6790510186242851874,16398378059199614345]}},{"file_name":"/Users/pmirabel/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.0.5/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[16952996814485381154,12694838226815725242]}},{"file_name":"/Users/pmirabel/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.0.5/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10811575515166729188,5157104844567250356]}},{"file_name":"/Users/pmirabel/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.0.5/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[5499605051296296794,10602893664251808532]}},{"file_name":"/Users/pmirabel/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.0.5/src/lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[7615427394098920200,5473872719210042510]}},{"file_name":"/Users/pmirabel/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.0.5/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10041795312384764197,6753572738911577197]}},{"file_name":"/Users/pmirabel/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.0.5/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16531696748233657088,18425851410521139411]}},{"file_name":"/Users/pmirabel/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.0.5/src/lib.rs","num":8,"id":{"name":"alloc_jemalloc","disambiguator":[11028702079408304855,7762430400770749226]}},{"file_name":"/Users/pmirabel/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.0.5/src/lib.rs","num":9,"id":{"name":"panic_unwind","disambiguator":[12306496864576505476,14030669852036366021]}},{"file_name":"/Users/pmirabel/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.0.5/src/lib.rs","num":10,"id":{"name":"csv_core","disambiguator":[9543071074641283162,9756853072571586257]}},{"file_name":"/Users/pmirabel/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.0.5/src/lib.rs","num":11,"id":{"name":"memchr","disambiguator":[4626321232110990410,6515305985168878238]}},{"file_name":"/Users/pmirabel/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.0.5/src/lib.rs","num":12,"id":{"name":"cfg_if","disambiguator":[12356243392753676114,1730320850800040113]}},{"file_name":"/Users/pmirabel/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.0.5/src/lib.rs","num":13,"id":{"name":"libc","disambiguator":[6781687139503595816,2265090664734382006]}},{"file_name":"/Users/pmirabel/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.0.5/src/lib.rs","num":14,"id":{"name":"serde","disambiguator":[3017798656242220796,10214725269233042624]}}],"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":10753,"line_start":1,"line_end":387,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1624},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4123,"byte_end":4133,"line_start":183,"line_end":183,"column_start":23,"column_end":33},"alias_span":null,"name":"ByteRecord","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":246},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4135,"byte_end":4149,"line_start":183,"line_end":183,"column_start":35,"column_end":49},"alias_span":null,"name":"ByteRecordIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1654},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4151,"byte_end":4159,"line_start":183,"line_end":183,"column_start":51,"column_end":59},"alias_span":null,"name":"Position","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1710},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4185,"byte_end":4201,"line_start":184,"line_end":184,"column_start":24,"column_end":40},"alias_span":null,"name":"DeserializeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1730},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4203,"byte_end":4223,"line_start":184,"line_end":184,"column_start":42,"column_end":62},"alias_span":null,"name":"DeserializeErrorKind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1750},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4247,"byte_end":4252,"line_start":186,"line_end":186,"column_start":5,"column_end":10},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1756},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4254,"byte_end":4263,"line_start":186,"line_end":186,"column_start":12,"column_end":21},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1762},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4265,"byte_end":4278,"line_start":186,"line_end":186,"column_start":23,"column_end":36},"alias_span":null,"name":"FromUtf8Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":624},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4280,"byte_end":4294,"line_start":186,"line_end":186,"column_start":38,"column_end":52},"alias_span":null,"name":"IntoInnerError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":562},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4296,"byte_end":4302,"line_start":186,"line_end":186,"column_start":54,"column_end":60},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1782},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4304,"byte_end":4313,"line_start":186,"line_end":186,"column_start":62,"column_end":71},"alias_span":null,"name":"Utf8Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1808},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4340,"byte_end":4346,"line_start":189,"line_end":189,"column_start":5,"column_end":11},"alias_span":null,"name":"Reader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1802},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4348,"byte_end":4361,"line_start":189,"line_end":189,"column_start":13,"column_end":26},"alias_span":null,"name":"ReaderBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":806},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4367,"byte_end":4393,"line_start":190,"line_end":190,"column_start":5,"column_end":31},"alias_span":null,"name":"DeserializeRecordsIntoIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":824},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4395,"byte_end":4417,"line_start":190,"line_end":190,"column_start":33,"column_end":55},"alias_span":null,"name":"DeserializeRecordsIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":840},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4423,"byte_end":4444,"line_start":191,"line_end":191,"column_start":5,"column_end":26},"alias_span":null,"name":"StringRecordsIntoIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":858},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4446,"byte_end":4463,"line_start":191,"line_end":191,"column_start":28,"column_end":45},"alias_span":null,"name":"StringRecordsIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":874},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4469,"byte_end":4488,"line_start":192,"line_end":192,"column_start":5,"column_end":24},"alias_span":null,"name":"ByteRecordsIntoIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":892},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4490,"byte_end":4505,"line_start":192,"line_end":192,"column_start":26,"column_end":41},"alias_span":null,"name":"ByteRecordsIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1826},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4534,"byte_end":4546,"line_start":194,"line_end":194,"column_start":25,"column_end":37},"alias_span":null,"name":"StringRecord","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1432},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4548,"byte_end":4564,"line_start":194,"line_end":194,"column_start":39,"column_end":55},"alias_span":null,"name":"StringRecordIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1842},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4584,"byte_end":4590,"line_start":195,"line_end":195,"column_start":18,"column_end":24},"alias_span":null,"name":"Writer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1836},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4592,"byte_end":4605,"line_start":195,"line_end":195,"column_start":26,"column_end":39},"alias_span":null,"name":"WriterBuilder","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":10753,"line_start":1,"line_end":387,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/pmirabel/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.0.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":18},{"krate":0,"index":26},{"krate":0,"index":32},{"krate":0,"index":46},{"krate":0,"index":64},{"krate":0,"index":70},{"krate":0,"index":76},{"krate":0,"index":272},{"krate":0,"index":540},{"krate":0,"index":648},{"krate":0,"index":650},{"krate":0,"index":908},{"krate":0,"index":1286},{"krate":0,"index":1448},{"krate":0,"index":1450},{"krate":0,"index":1866},{"krate":0,"index":1874},{"krate":0,"index":1872},{"krate":0,"index":1868},{"krate":0,"index":1596},{"krate":0,"index":1600},{"krate":0,"index":1878},{"krate":0,"index":1886},{"krate":0,"index":1884},{"krate":0,"index":1880},{"krate":0,"index":1604},{"krate":0,"index":1608},{"krate":0,"index":1890},{"krate":0,"index":1902},{"krate":0,"index":1900},{"krate":0,"index":1896},{"krate":0,"index":1892},{"krate":0,"index":1612},{"krate":0,"index":1618},{"krate":0,"index":1622}],"decl_id":null,"docs":"The `csv` crate provides a fast and flexible CSV reader and writer, with\nsupport for Serde.","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3882,"byte_end":3904,"line_start":169,"line_end":169,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1624},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":14474,"byte_end":14484,"line_start":108,"line_end":108,"column_start":12,"column_end":22},"name":"ByteRecord","qualname":"::byte_record::ByteRecord","value":"","parent":null,"children":[],"decl_id":null,"docs":" A single CSV record stored as raw bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":17082,"byte_end":17085,"line_start":204,"line_end":204,"column_start":12,"column_end":15},"name":"new","qualname":"<ByteRecord>::new","value":"fn () -> ByteRecord","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty `ByteRecord`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":17061,"byte_end":17070,"line_start":203,"line_end":203,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":17434,"byte_end":17447,"line_start":214,"line_end":214,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<ByteRecord>::with_capacity","value":"fn (buffer: usize, fields: usize) -> ByteRecord","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty `ByteRecord` with the given capacity settings.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":17413,"byte_end":17422,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":20730,"byte_end":20741,"line_start":311,"line_end":311,"column_start":12,"column_end":23},"name":"deserialize","qualname":"<ByteRecord>::deserialize","value":"fn <'de, D> (&'de self, headers: Option<&'de ByteRecord>) -> Result<D>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize this record.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":21347,"byte_end":21351,"line_start":333,"line_end":333,"column_start":12,"column_end":16},"name":"iter","qualname":"<ByteRecord>::iter","value":"fn (&self) -> ByteRecordIter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all fields in this record.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":21326,"byte_end":21335,"line_start":332,"line_end":332,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":21798,"byte_end":21801,"line_start":351,"line_end":351,"column_start":12,"column_end":15},"name":"get","qualname":"<ByteRecord>::get","value":"fn (&self, i: usize) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Return the field at index `i`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":21777,"byte_end":21786,"line_start":350,"line_end":350,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":22134,"byte_end":22142,"line_start":365,"line_end":365,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<ByteRecord>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if this record is empty.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":22113,"byte_end":22122,"line_start":364,"line_end":364,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":22461,"byte_end":22464,"line_start":380,"line_end":380,"column_start":12,"column_end":15},"name":"len","qualname":"<ByteRecord>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of fields in this record.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":22440,"byte_end":22449,"line_start":379,"line_end":379,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":22996,"byte_end":23004,"line_start":401,"line_end":401,"column_start":12,"column_end":20},"name":"truncate","qualname":"<ByteRecord>::truncate","value":"fn (&mut self, n: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Truncate this record to `n` fields.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":22975,"byte_end":22984,"line_start":400,"line_end":400,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":23613,"byte_end":23618,"line_start":425,"line_end":425,"column_start":12,"column_end":17},"name":"clear","qualname":"<ByteRecord>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear this record so that it has zero fields.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":23592,"byte_end":23601,"line_start":424,"line_end":424,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":24198,"byte_end":24202,"line_start":446,"line_end":446,"column_start":12,"column_end":16},"name":"trim","qualname":"<ByteRecord>::trim","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Trim the fields of this record so that leading and trailing whitespace\n is removed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":25739,"byte_end":25749,"line_start":494,"line_end":494,"column_start":12,"column_end":22},"name":"push_field","qualname":"<ByteRecord>::push_field","value":"fn (&mut self, field: &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Add a new field to this record.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":25718,"byte_end":25727,"line_start":493,"line_end":493,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":27313,"byte_end":27321,"line_start":542,"line_end":542,"column_start":12,"column_end":20},"name":"position","qualname":"<ByteRecord>::position","value":"fn (&self) -> Option<&Position>","parent":null,"children":[],"decl_id":null,"docs":" Return the position of this record, if available.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":27292,"byte_end":27301,"line_start":541,"line_end":541,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":27849,"byte_end":27861,"line_start":563,"line_end":563,"column_start":12,"column_end":24},"name":"set_position","qualname":"<ByteRecord>::set_position","value":"fn (&mut self, pos: Option<Position>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the position of this record.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":27828,"byte_end":27837,"line_start":562,"line_end":562,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":28474,"byte_end":28479,"line_start":583,"line_end":583,"column_start":12,"column_end":17},"name":"range","qualname":"<ByteRecord>::range","value":"fn (&self, i: usize) -> Option<Range<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Return the start and end position of a field in this record.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":28453,"byte_end":28462,"line_start":582,"line_end":582,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":28993,"byte_end":29001,"line_start":600,"line_end":600,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<ByteRecord>::as_slice","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Return the entire row as a single byte slice. The slice returned stores\n all fields contiguously. The boundaries of each field can be determined\n via the `range` method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":28972,"byte_end":28981,"line_start":599,"line_end":599,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1654},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":29468,"byte_end":29476,"line_start":614,"line_end":614,"column_start":12,"column_end":20},"name":"Position","qualname":"::byte_record::Position","value":"Position {  }","parent":null,"children":[{"krate":0,"index":709},{"krate":0,"index":711},{"krate":0,"index":713}],"decl_id":null,"docs":" A position in CSV data.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":29457,"byte_end":29527,"line_start":614,"line_end":618,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":29633,"byte_end":29636,"line_start":623,"line_end":623,"column_start":12,"column_end":15},"name":"new","qualname":"<Position>::new","value":"fn () -> Position","parent":null,"children":[],"decl_id":null,"docs":" Returns a new position initialized to the start value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":29612,"byte_end":29621,"line_start":622,"line_end":622,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":29790,"byte_end":29794,"line_start":628,"line_end":628,"column_start":22,"column_end":26},"name":"byte","qualname":"<Position>::byte","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" The byte offset, starting at `0`, of this position.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":29773,"byte_end":29782,"line_start":628,"line_end":628,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":29904,"byte_end":29908,"line_start":630,"line_end":630,"column_start":22,"column_end":26},"name":"line","qualname":"<Position>::line","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" The line number, starting at `1`, of this position.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":29887,"byte_end":29896,"line_start":630,"line_end":630,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":30023,"byte_end":30029,"line_start":632,"line_end":632,"column_start":22,"column_end":28},"name":"record","qualname":"<Position>::record","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" The record index, starting with the first record at `0`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":30006,"byte_end":30015,"line_start":632,"line_end":632,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":30132,"byte_end":30140,"line_start":636,"line_end":636,"column_start":12,"column_end":20},"name":"set_byte","qualname":"<Position>::set_byte","value":"fn (&mut self, byte: u64) -> &mut Position","parent":null,"children":[],"decl_id":null,"docs":" Set the byte offset of this position.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":30111,"byte_end":30120,"line_start":635,"line_end":635,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":30377,"byte_end":30385,"line_start":645,"line_end":645,"column_start":12,"column_end":20},"name":"set_line","qualname":"<Position>::set_line","value":"fn (&mut self, line: u64) -> &mut Position","parent":null,"children":[],"decl_id":null,"docs":" Set the line number of this position.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":30356,"byte_end":30365,"line_start":644,"line_end":644,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":30572,"byte_end":30582,"line_start":653,"line_end":653,"column_start":12,"column_end":22},"name":"set_record","qualname":"<Position>::set_record","value":"fn (&mut self, record: u64) -> &mut Position","parent":null,"children":[],"decl_id":null,"docs":" Set the record index of this position.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":30551,"byte_end":30560,"line_start":652,"line_end":652,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":246},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":34147,"byte_end":34161,"line_start":789,"line_end":789,"column_start":12,"column_end":26},"name":"ByteRecordIter","qualname":"::byte_record::ByteRecordIter","value":"ByteRecordIter {  }","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":75},{"krate":0,"index":77}],"decl_id":null,"docs":" A double-ended iterator over the fields in a byte record.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,100,101,115,101,114,105,97,108,105,122,101,114,46,114,115],"byte_start":47427,"byte_end":47438,"line_start":72,"line_end":72,"column_start":8,"column_end":19},"name":"has_headers","qualname":"::deserializer::DeRecord::has_headers","value":"fn (&self) -> bool","parent":{"krate":0,"index":338},"children":[],"decl_id":null,"docs":" Returns true if and only if this deserialize has access to headers.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,100,101,115,101,114,105,97,108,105,122,101,114,46,114,115],"byte_start":47537,"byte_end":47548,"line_start":75,"line_end":75,"column_start":8,"column_end":19},"name":"next_header","qualname":"::deserializer::DeRecord::next_header","value":"fn (&mut self) -> Result<Option<&'r str>, DeserializeError>","parent":{"krate":0,"index":338},"children":[],"decl_id":null,"docs":" Extracts the next string header value from the underlying record.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,100,101,115,101,114,105,97,108,105,122,101,114,46,114,115],"byte_start":47690,"byte_end":47707,"line_start":78,"line_end":78,"column_start":8,"column_end":25},"name":"next_header_bytes","qualname":"::deserializer::DeRecord::next_header_bytes","value":"fn (&mut self) -> Result<Option<&'r [u8]>, DeserializeError>","parent":{"krate":0,"index":338},"children":[],"decl_id":null,"docs":" Extracts the next raw byte header value from the underlying record.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,100,101,115,101,114,105,97,108,105,122,101,114,46,114,115],"byte_start":47856,"byte_end":47866,"line_start":83,"line_end":83,"column_start":8,"column_end":18},"name":"next_field","qualname":"::deserializer::DeRecord::next_field","value":"fn (&mut self) -> Result<&'r str, DeserializeError>","parent":{"krate":0,"index":338},"children":[],"decl_id":null,"docs":" Extracts the next string field from the underlying record.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,100,101,115,101,114,105,97,108,105,122,101,114,46,114,115],"byte_start":47993,"byte_end":48009,"line_start":86,"line_end":86,"column_start":8,"column_end":24},"name":"next_field_bytes","qualname":"::deserializer::DeRecord::next_field_bytes","value":"fn (&mut self) -> Result<&'r [u8], DeserializeError>","parent":{"krate":0,"index":338},"children":[],"decl_id":null,"docs":" Extracts the next raw byte field from the underlying record.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,100,101,115,101,114,105,97,108,105,122,101,114,46,114,115],"byte_start":48128,"byte_end":48138,"line_start":89,"line_end":89,"column_start":8,"column_end":18},"name":"peek_field","qualname":"::deserializer::DeRecord::peek_field","value":"fn (&mut self) -> Option<&'r [u8]>","parent":{"krate":0,"index":338},"children":[],"decl_id":null,"docs":" Peeks at the next field from the underlying record.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,100,101,115,101,114,105,97,108,105,122,101,114,46,114,115],"byte_start":48256,"byte_end":48261,"line_start":92,"line_end":92,"column_start":8,"column_end":13},"name":"error","qualname":"::deserializer::DeRecord::error","value":"fn (&self, kind: DeserializeErrorKind) -> DeserializeError","parent":{"krate":0,"index":338},"children":[],"decl_id":null,"docs":" Returns an error corresponding to the most recently extracted field.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,100,101,115,101,114,105,97,108,105,122,101,114,46,114,115],"byte_start":48387,"byte_end":48404,"line_start":95,"line_end":95,"column_start":8,"column_end":25},"name":"infer_deserialize","qualname":"::deserializer::DeRecord::infer_deserialize","value":"fn <'de, V> (&mut self, visitor: V) -> Result<V::Value, DeserializeError>","parent":{"krate":0,"index":338},"children":[],"decl_id":null,"docs":" Infer the type of the next field and deserialize it.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1710},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,100,101,115,101,114,105,97,108,105,122,101,114,46,114,115],"byte_start":62754,"byte_end":62770,"line_start":628,"line_end":628,"column_start":12,"column_end":28},"name":"DeserializeError","qualname":"::deserializer::DeserializeError","value":"DeserializeError {  }","parent":null,"children":[{"krate":0,"index":751},{"krate":0,"index":753}],"decl_id":null,"docs":" An Serde deserialization error.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,100,101,115,101,114,105,97,108,105,122,101,114,46,114,115],"byte_start":62743,"byte_end":62830,"line_start":628,"line_end":631,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":755},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,100,101,115,101,114,105,97,108,105,122,101,114,46,114,115],"byte_start":63001,"byte_end":63008,"line_start":637,"line_end":637,"column_start":5,"column_end":12},"name":"Message","qualname":"::deserializer::DeserializeErrorKind::Message","value":"DeserializeErrorKind::Message(String)","parent":{"krate":0,"index":1730},"children":[],"decl_id":null,"docs":" A generic Serde deserialization error.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":759},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,100,101,115,101,114,105,97,108,105,122,101,114,46,114,115],"byte_start":63065,"byte_end":63076,"line_start":639,"line_end":639,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::deserializer::DeserializeErrorKind::Unsupported","value":"DeserializeErrorKind::Unsupported(String)","parent":{"krate":0,"index":1730},"children":[],"decl_id":null,"docs":" A generic Serde unsupported error.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":763},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,100,101,115,101,114,105,97,108,105,122,101,114,46,114,115],"byte_start":63211,"byte_end":63229,"line_start":642,"line_end":642,"column_start":5,"column_end":23},"name":"UnexpectedEndOfRow","qualname":"::deserializer::DeserializeErrorKind::UnexpectedEndOfRow","value":"DeserializeErrorKind::UnexpectedEndOfRow","parent":{"krate":0,"index":1730},"children":[],"decl_id":null,"docs":" This error occurs when a Rust type expects to decode another field\n from a row, but no more fields exist.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":765},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,100,101,115,101,114,105,97,108,105,122,101,114,46,114,115],"byte_start":63418,"byte_end":63429,"line_start":646,"line_end":646,"column_start":5,"column_end":16},"name":"InvalidUtf8","qualname":"::deserializer::DeserializeErrorKind::InvalidUtf8","value":"DeserializeErrorKind::InvalidUtf8(str::Utf8Error)","parent":{"krate":0,"index":1730},"children":[],"decl_id":null,"docs":" This error occurs when UTF-8 validation on a field fails. UTF-8\n validation is only performed when the Rust type requires it (e.g.,\n a `String` or `&str` type).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":769},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,100,101,115,101,114,105,97,108,105,122,101,114,46,114,115],"byte_start":63514,"byte_end":63523,"line_start":648,"line_end":648,"column_start":5,"column_end":14},"name":"ParseBool","qualname":"::deserializer::DeserializeErrorKind::ParseBool","value":"DeserializeErrorKind::ParseBool(str::ParseBoolError)","parent":{"krate":0,"index":1730},"children":[],"decl_id":null,"docs":" This error occurs when a boolean value fails to parse.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":773},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,100,101,115,101,114,105,97,108,105,122,101,114,46,114,115],"byte_start":63614,"byte_end":63622,"line_start":650,"line_end":650,"column_start":5,"column_end":13},"name":"ParseInt","qualname":"::deserializer::DeserializeErrorKind::ParseInt","value":"DeserializeErrorKind::ParseInt(num::ParseIntError)","parent":{"krate":0,"index":1730},"children":[],"decl_id":null,"docs":" This error occurs when an integer value fails to parse.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":777},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,100,101,115,101,114,105,97,108,105,122,101,114,46,114,115],"byte_start":63709,"byte_end":63719,"line_start":652,"line_end":652,"column_start":5,"column_end":15},"name":"ParseFloat","qualname":"::deserializer::DeserializeErrorKind::ParseFloat","value":"DeserializeErrorKind::ParseFloat(num::ParseFloatError)","parent":{"krate":0,"index":1730},"children":[],"decl_id":null,"docs":" This error occurs when a float value fails to parse.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1730},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,100,101,115,101,114,105,97,108,105,122,101,114,46,114,115],"byte_start":62927,"byte_end":62947,"line_start":635,"line_end":635,"column_start":10,"column_end":30},"name":"DeserializeErrorKind","qualname":"::deserializer::DeserializeErrorKind","value":"DeserializeErrorKind::{Message, Unsupported, UnexpectedEndOfRow, InvalidUtf8, ParseBool, ParseInt, ParseFloat}","parent":null,"children":[{"krate":0,"index":755},{"krate":0,"index":759},{"krate":0,"index":763},{"krate":0,"index":765},{"krate":0,"index":769},{"krate":0,"index":773},{"krate":0,"index":777}],"decl_id":null,"docs":" The type of a Serde deserialization error.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,100,101,115,101,114,105,97,108,105,122,101,114,46,114,115],"byte_start":62918,"byte_end":63744,"line_start":635,"line_end":653,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,100,101,115,101,114,105,97,108,105,122,101,114,46,114,115],"byte_start":65090,"byte_end":65095,"line_start":700,"line_end":700,"column_start":12,"column_end":17},"name":"field","qualname":"<DeserializeError>::field","value":"fn (&self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Return the field index (starting at 0) of this error, if available.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,100,101,115,101,114,105,97,108,105,122,101,114,46,114,115],"byte_start":65199,"byte_end":65203,"line_start":705,"line_end":705,"column_start":12,"column_end":16},"name":"kind","qualname":"<DeserializeError>::kind","value":"fn (&self) -> &DeserializeErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Return the underlying error kind.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":562},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":78100,"byte_end":78106,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A type alias for `Result<T, csv::Error>`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1750},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":78547,"byte_end":78552,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error that can occur when processing CSV data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":78643,"byte_end":78647,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"kind","qualname":"<Error>::kind","value":"fn (&self) -> &ErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Return the specific type of this error.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":78757,"byte_end":78766,"line_start":37,"line_end":37,"column_start":12,"column_end":21},"name":"into_kind","qualname":"<Error>::into_kind","value":"fn (self) -> ErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Unwrap this error into its underlying type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":78973,"byte_end":78984,"line_start":45,"line_end":45,"column_start":12,"column_end":23},"name":"is_io_error","qualname":"<Error>::is_io_error","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this is an I/O error.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":785},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":79243,"byte_end":79245,"line_start":57,"line_end":57,"column_start":5,"column_end":7},"name":"Io","qualname":"::error::ErrorKind::Io","value":"ErrorKind::Io(io::Error)","parent":{"krate":0,"index":1756},"children":[],"decl_id":null,"docs":" An I/O error that occurred while reading CSV data.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":789},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":79358,"byte_end":79362,"line_start":60,"line_end":60,"column_start":5,"column_end":9},"name":"Utf8","qualname":"::error::ErrorKind::Utf8","value":"ErrorKind::Utf8 { pos, err }","parent":{"krate":0,"index":1756},"children":[],"decl_id":null,"docs":" A UTF-8 decoding error that occured while reading CSV data into Rust\n `String`s.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":795},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":79758,"byte_end":79772,"line_start":70,"line_end":70,"column_start":5,"column_end":19},"name":"UnequalLengths","qualname":"::error::ErrorKind::UnequalLengths","value":"ErrorKind::UnequalLengths { pos, expected_len, len }","parent":{"krate":0,"index":1756},"children":[],"decl_id":null,"docs":" This error occurs when two records with an unequal number of fields\n are found. This error only occurs when the `flexible` option in a\n CSV reader/writer is disabled.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":803},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":80390,"byte_end":80394,"line_start":84,"line_end":84,"column_start":5,"column_end":9},"name":"Seek","qualname":"::error::ErrorKind::Seek","value":"ErrorKind::Seek","parent":{"krate":0,"index":1756},"children":[],"decl_id":null,"docs":" This error occurs when either the `byte_headers` or `headers` methods\n are called on a CSV reader that was asked to `seek` before it parsed\n the first record.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":805},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":80475,"byte_end":80484,"line_start":86,"line_end":86,"column_start":5,"column_end":14},"name":"Serialize","qualname":"::error::ErrorKind::Serialize","value":"ErrorKind::Serialize(String)","parent":{"krate":0,"index":1756},"children":[],"decl_id":null,"docs":" An error of this kind occurs only when using the Serde serializer.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":809},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":80602,"byte_end":80613,"line_start":89,"line_end":89,"column_start":5,"column_end":16},"name":"Deserialize","qualname":"::error::ErrorKind::Deserialize","value":"ErrorKind::Deserialize { pos, err }","parent":{"krate":0,"index":1756},"children":[],"decl_id":null,"docs":" An error of this kind occurs only when performing automatic\n deserialization with serde.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":815},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":81056,"byte_end":81071,"line_start":101,"line_end":101,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::error::ErrorKind::__Nonexhaustive","value":"ErrorKind::__Nonexhaustive","parent":{"krate":0,"index":1756},"children":[],"decl_id":null,"docs":" Hints that destructuring should not be exhaustive.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1756},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":79168,"byte_end":79177,"line_start":55,"line_end":55,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::error::ErrorKind","value":"ErrorKind::{Io, Utf8, UnequalLengths, Seek, Serialize, Deserialize, __Nonexhaustive}","parent":null,"children":[{"krate":0,"index":785},{"krate":0,"index":789},{"krate":0,"index":795},{"krate":0,"index":803},{"krate":0,"index":805},{"krate":0,"index":809},{"krate":0,"index":815}],"decl_id":null,"docs":" The specific type of an error.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1762},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":84675,"byte_end":84688,"line_start":200,"line_end":200,"column_start":12,"column_end":25},"name":"FromUtf8Error","qualname":"::error::FromUtf8Error","value":"FromUtf8Error {  }","parent":null,"children":[{"krate":0,"index":817},{"krate":0,"index":819}],"decl_id":null,"docs":" A UTF-8 validation error during record conversion.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":84664,"byte_end":84736,"line_start":200,"line_end":203,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":85001,"byte_end":85017,"line_start":212,"line_end":212,"column_start":12,"column_end":28},"name":"into_byte_record","qualname":"<FromUtf8Error>::into_byte_record","value":"fn (self) -> ByteRecord","parent":null,"children":[],"decl_id":null,"docs":" Access the underlying `ByteRecord` that failed UTF-8 validation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":85132,"byte_end":85142,"line_start":217,"line_end":217,"column_start":12,"column_end":22},"name":"utf8_error","qualname":"<FromUtf8Error>::utf8_error","value":"fn (&self) -> &Utf8Error","parent":null,"children":[],"decl_id":null,"docs":" Access the underlying UTF-8 validation error.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1782},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":85782,"byte_end":85791,"line_start":241,"line_end":241,"column_start":12,"column_end":21},"name":"Utf8Error","qualname":"::error::Utf8Error","value":"Utf8Error {  }","parent":null,"children":[{"krate":0,"index":821},{"krate":0,"index":823}],"decl_id":null,"docs":" A UTF-8 validation error.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":85771,"byte_end":85989,"line_start":241,"line_end":246,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":86255,"byte_end":86260,"line_start":255,"line_end":255,"column_start":12,"column_end":17},"name":"field","qualname":"<Utf8Error>::field","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The field index of a byte record in which UTF-8 validation failed.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":86380,"byte_end":86391,"line_start":257,"line_end":257,"column_start":12,"column_end":23},"name":"valid_up_to","qualname":"<Utf8Error>::valid_up_to","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The index into the given field up to which valid UTF-8 was verified.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":624},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":87109,"byte_end":87123,"line_start":281,"line_end":281,"column_start":12,"column_end":26},"name":"IntoInnerError","qualname":"::error::IntoInnerError","value":"IntoInnerError {  }","parent":null,"children":[{"krate":0,"index":285},{"krate":0,"index":287}],"decl_id":null,"docs":" `IntoInnerError` occurs when consuming a `Writer` fails.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":87612,"byte_end":87617,"line_start":298,"line_end":298,"column_start":12,"column_end":17},"name":"error","qualname":"<IntoInnerError<W>>::error","value":"fn (&self) -> &io::Error","parent":null,"children":[],"decl_id":null,"docs":" Returns the error which caused the call to `into_inner` to fail.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":87851,"byte_end":87861,"line_start":306,"line_end":306,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<IntoInnerError<W>>::into_inner","value":"fn (self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying writer which generated the error.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":648},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,99,111,111,107,98,111,111,107,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cookbook","qualname":"::cookbook","value":"/Users/pmirabel/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.0.5/src/cookbook.rs","parent":null,"children":[],"decl_id":null,"docs":"A cookbook of examples for CSV reading and writing.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1802},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":96282,"byte_end":96295,"line_start":23,"line_end":23,"column_start":12,"column_end":25},"name":"ReaderBuilder","qualname":"::reader::ReaderBuilder","value":"ReaderBuilder {  }","parent":null,"children":[{"krate":0,"index":825},{"krate":0,"index":827},{"krate":0,"index":829},{"krate":0,"index":831},{"krate":0,"index":833}],"decl_id":null,"docs":" Builds a CSV reader with various configuration knobs.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":97990,"byte_end":97993,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"new","qualname":"<ReaderBuilder>::new","value":"fn () -> ReaderBuilder","parent":null,"children":[],"decl_id":null,"docs":" Create a new builder for configuring CSV parsing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":98790,"byte_end":98799,"line_start":109,"line_end":109,"column_start":12,"column_end":21},"name":"from_path","qualname":"<ReaderBuilder>::from_path","value":"fn <P> (&self, path: P) -> Result<Reader<File>>","parent":null,"children":[],"decl_id":null,"docs":" Build a CSV parser from this configuration that reads data from the\n given file path.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":99785,"byte_end":99796,"line_start":141,"line_end":141,"column_start":12,"column_end":23},"name":"from_reader","qualname":"<ReaderBuilder>::from_reader","value":"fn <R> (&self, rdr: R) -> Reader<R>","parent":null,"children":[],"decl_id":null,"docs":" Build a CSV parser from this configuration that reads data from `rdr`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":100791,"byte_end":100800,"line_start":176,"line_end":176,"column_start":12,"column_end":21},"name":"delimiter","qualname":"<ReaderBuilder>::delimiter","value":"fn (&mut self, delimiter: u8) -> &mut ReaderBuilder","parent":null,"children":[],"decl_id":null,"docs":" The field delimiter to use when parsing CSV.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":102826,"byte_end":102837,"line_start":233,"line_end":233,"column_start":12,"column_end":23},"name":"has_headers","qualname":"<ReaderBuilder>::has_headers","value":"fn (&mut self, yes: bool) -> &mut ReaderBuilder","parent":null,"children":[],"decl_id":null,"docs":" Whether to treat the first row as a special header row.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":105790,"byte_end":105798,"line_start":319,"line_end":319,"column_start":12,"column_end":20},"name":"flexible","qualname":"<ReaderBuilder>::flexible","value":"fn (&mut self, yes: bool) -> &mut ReaderBuilder","parent":null,"children":[],"decl_id":null,"docs":" Whether the number of fields in records is allowed to change or not.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":107753,"byte_end":107757,"line_start":372,"line_end":372,"column_start":12,"column_end":16},"name":"trim","qualname":"<ReaderBuilder>::trim","value":"fn (&mut self, trim: Trim) -> &mut ReaderBuilder","parent":null,"children":[],"decl_id":null,"docs":" Whether fields are trimmed of leading and trailing whitespace or not.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":108971,"byte_end":108981,"line_start":407,"line_end":407,"column_start":12,"column_end":22},"name":"terminator","qualname":"<ReaderBuilder>::terminator","value":"fn (&mut self, term: Terminator) -> &mut ReaderBuilder","parent":null,"children":[],"decl_id":null,"docs":" The record terminator to use when parsing CSV.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":110079,"byte_end":110084,"line_start":446,"line_end":446,"column_start":12,"column_end":17},"name":"quote","qualname":"<ReaderBuilder>::quote","value":"fn (&mut self, quote: u8) -> &mut ReaderBuilder","parent":null,"children":[],"decl_id":null,"docs":" The quote character to use when parsing CSV.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":111366,"byte_end":111372,"line_start":487,"line_end":487,"column_start":12,"column_end":18},"name":"escape","qualname":"<ReaderBuilder>::escape","value":"fn (&mut self, escape: Option<u8>) -> &mut ReaderBuilder","parent":null,"children":[],"decl_id":null,"docs":" The escape character to use when parsing CSV.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":112552,"byte_end":112564,"line_start":526,"line_end":526,"column_start":12,"column_end":24},"name":"double_quote","qualname":"<ReaderBuilder>::double_quote","value":"fn (&mut self, yes: bool) -> &mut ReaderBuilder","parent":null,"children":[],"decl_id":null,"docs":" Enable double quote escapes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":113702,"byte_end":113709,"line_start":565,"line_end":565,"column_start":12,"column_end":19},"name":"quoting","qualname":"<ReaderBuilder>::quoting","value":"fn (&mut self, yes: bool) -> &mut ReaderBuilder","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable quoting.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":114900,"byte_end":114907,"line_start":605,"line_end":605,"column_start":12,"column_end":19},"name":"comment","qualname":"<ReaderBuilder>::comment","value":"fn (&mut self, comment: Option<u8>) -> &mut ReaderBuilder","parent":null,"children":[],"decl_id":null,"docs":" The comment character to use when parsing CSV.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":116084,"byte_end":116089,"line_start":641,"line_end":641,"column_start":12,"column_end":17},"name":"ascii","qualname":"<ReaderBuilder>::ascii","value":"fn (&mut self) -> &mut ReaderBuilder","parent":null,"children":[],"decl_id":null,"docs":" A convenience method for specifying a configuration to read ASCII\n delimited text.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":116307,"byte_end":116322,"line_start":648,"line_end":648,"column_start":12,"column_end":27},"name":"buffer_capacity","qualname":"<ReaderBuilder>::buffer_capacity","value":"fn (&mut self, capacity: usize) -> &mut ReaderBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set the capacity (in bytes) of the buffer used in the CSV reader.\n This defaults to a reasonable setting.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":742},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":116612,"byte_end":116615,"line_start":658,"line_end":658,"column_start":12,"column_end":15},"name":"nfa","qualname":"<ReaderBuilder>::nfa","value":"fn (&mut self, yes: bool) -> &mut ReaderBuilder","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable the NFA for parsing CSV.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1808},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":120244,"byte_end":120250,"line_start":740,"line_end":740,"column_start":12,"column_end":18},"name":"Reader","qualname":"::reader::Reader","value":"Reader {  }","parent":null,"children":[{"krate":0,"index":837},{"krate":0,"index":839},{"krate":0,"index":841}],"decl_id":null,"docs":" A already configured CSV reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":746},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":122856,"byte_end":122865,"line_start":819,"line_end":819,"column_start":12,"column_end":21},"name":"from_path","qualname":"<Reader<Reader<File>>>::from_path","value":"fn <P> (path: P) -> Result<Reader<File>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new CSV parser with a default configuration for the given\n file path.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":124468,"byte_end":124479,"line_start":873,"line_end":873,"column_start":12,"column_end":23},"name":"from_reader","qualname":"<Reader<R>>::from_reader","value":"fn (rdr: R) -> Reader<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new CSV parser with a default configuration for the given\n reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":131504,"byte_end":131515,"line_start":1067,"line_end":1067,"column_start":12,"column_end":23},"name":"deserialize","qualname":"<Reader<R>>::deserialize","value":"fn <D> (&mut self) -> DeserializeRecordsIter<R, D>","parent":null,"children":[],"decl_id":null,"docs":" Returns a borrowed iterator over deserialized records.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":133695,"byte_end":133711,"line_start":1131,"line_end":1131,"column_start":12,"column_end":28},"name":"into_deserialize","qualname":"<Reader<R>>::into_deserialize","value":"fn <D> (self) -> DeserializeRecordsIntoIter<R, D>","parent":null,"children":[],"decl_id":null,"docs":" Returns an owned iterator over deserialized records.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":135069,"byte_end":135076,"line_start":1172,"line_end":1172,"column_start":12,"column_end":19},"name":"records","qualname":"<Reader<R>>::records","value":"fn (&mut self) -> StringRecordsIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Returns a borrowed iterator over all records as strings.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":136480,"byte_end":136492,"line_start":1214,"line_end":1214,"column_start":12,"column_end":24},"name":"into_records","qualname":"<Reader<R>>::into_records","value":"fn (self) -> StringRecordsIntoIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Returns an owned iterator over all records as strings.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":137797,"byte_end":137809,"line_start":1253,"line_end":1253,"column_start":12,"column_end":24},"name":"byte_records","qualname":"<Reader<R>>::byte_records","value":"fn (&mut self) -> ByteRecordsIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Returns a borrowed iterator over all records as raw bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":139214,"byte_end":139231,"line_start":1295,"line_end":1295,"column_start":12,"column_end":29},"name":"into_byte_records","qualname":"<Reader<R>>::into_byte_records","value":"fn (self) -> ByteRecordsIntoIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Returns an owned iterator over all records as raw bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":141385,"byte_end":141392,"line_start":1355,"line_end":1355,"column_start":12,"column_end":19},"name":"headers","qualname":"<Reader<R>>::headers","value":"fn (&mut self) -> Result<&StringRecord>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the first row read by this parser.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":144036,"byte_end":144048,"line_start":1426,"line_end":1426,"column_start":12,"column_end":24},"name":"byte_headers","qualname":"<Reader<R>>::byte_headers","value":"fn (&mut self) -> Result<&ByteRecord>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the first row read by this parser as raw bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":145273,"byte_end":145284,"line_start":1464,"line_end":1464,"column_start":12,"column_end":23},"name":"set_headers","qualname":"<Reader<R>>::set_headers","value":"fn (&mut self, headers: StringRecord) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the headers of this CSV parser manually.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":772},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":146308,"byte_end":146324,"line_start":1497,"line_end":1497,"column_start":12,"column_end":28},"name":"set_byte_headers","qualname":"<Reader<R>>::set_byte_headers","value":"fn (&mut self, headers: ByteRecord) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the headers of this CSV parser manually as raw bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":776},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":148950,"byte_end":148961,"line_start":1570,"line_end":1570,"column_start":12,"column_end":23},"name":"read_record","qualname":"<Reader<R>>::read_record","value":"fn (&mut self, record: &mut StringRecord) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Read a single row into the given record. Returns false when no more\n records could be read.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":778},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":150797,"byte_end":150813,"line_start":1620,"line_end":1620,"column_start":12,"column_end":28},"name":"read_byte_record","qualname":"<Reader<R>>::read_byte_record","value":"fn (&mut self, record: &mut ByteRecord) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Read a single row into the given byte record. Returns false when no\n more records could be read.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":155429,"byte_end":155437,"line_start":1751,"line_end":1751,"column_start":12,"column_end":20},"name":"position","qualname":"<Reader<R>>::position","value":"fn (&self) -> &Position","parent":null,"children":[],"decl_id":null,"docs":" Return the current position of this CSV reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":156399,"byte_end":156406,"line_start":1785,"line_end":1785,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Reader<R>>::is_done","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if this reader has been exhausted.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":156591,"byte_end":156602,"line_start":1791,"line_end":1791,"column_start":12,"column_end":23},"name":"has_headers","qualname":"<Reader<R>>::has_headers","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if this reader has been configured to\n interpret the first record as a header record.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":790},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":156723,"byte_end":156730,"line_start":1796,"line_end":1796,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Reader<R>>::get_ref","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying reader.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":156853,"byte_end":156860,"line_start":1801,"line_end":1801,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Reader<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying reader.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":157093,"byte_end":157103,"line_start":1809,"line_end":1809,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Reader<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this CSV reader, returning the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":798},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":159777,"byte_end":159781,"line_start":1879,"line_end":1879,"column_start":12,"column_end":16},"name":"seek","qualname":"<Reader<R>>::seek","value":"fn (&mut self, pos: Position) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Seeks the underlying reader to the position given.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":160920,"byte_end":160928,"line_start":1906,"line_end":1906,"column_start":12,"column_end":20},"name":"seek_raw","qualname":"<Reader<R>>::seek_raw","value":"fn (&mut self, seek_from: io::SeekFrom, pos: Position) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" This is like `seek`, but provides direct control over how the seeking\n operation is performed via `io::SeekFrom`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":806},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":162310,"byte_end":162336,"line_start":1949,"line_end":1949,"column_start":12,"column_end":38},"name":"DeserializeRecordsIntoIter","qualname":"::reader::DeserializeRecordsIntoIter","value":"DeserializeRecordsIntoIter {  }","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":319},{"krate":0,"index":321},{"krate":0,"index":323}],"decl_id":null,"docs":" An owned iterator over deserialized records.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":163012,"byte_end":163018,"line_start":1973,"line_end":1973,"column_start":12,"column_end":18},"name":"reader","qualname":"<DeserializeRecordsIntoIter<R, D>>::reader","value":"fn (&self) -> &Reader<R>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the underlying CSV reader.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":163143,"byte_end":163153,"line_start":1978,"line_end":1978,"column_start":12,"column_end":22},"name":"reader_mut","qualname":"<DeserializeRecordsIntoIter<R, D>>::reader_mut","value":"fn (&mut self) -> &mut Reader<R>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the underlying CSV reader.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":163290,"byte_end":163301,"line_start":1983,"line_end":1983,"column_start":12,"column_end":23},"name":"into_reader","qualname":"<DeserializeRecordsIntoIter<R, D>>::into_reader","value":"fn (self) -> Reader<R>","parent":null,"children":[],"decl_id":null,"docs":" Drop this iterator and return the underlying CSV reader.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":824},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":164039,"byte_end":164061,"line_start":2008,"line_end":2008,"column_start":12,"column_end":34},"name":"DeserializeRecordsIter","qualname":"::reader::DeserializeRecordsIter","value":"DeserializeRecordsIter {  }","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":341},{"krate":0,"index":343},{"krate":0,"index":345}],"decl_id":null,"docs":" A borrowed iterator over deserialized records.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":164757,"byte_end":164763,"line_start":2032,"line_end":2032,"column_start":12,"column_end":18},"name":"reader","qualname":"<DeserializeRecordsIter<'r, R, D>>::reader","value":"fn (&self) -> &Reader<R>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the underlying CSV reader.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":164888,"byte_end":164898,"line_start":2037,"line_end":2037,"column_start":12,"column_end":22},"name":"reader_mut","qualname":"<DeserializeRecordsIter<'r, R, D>>::reader_mut","value":"fn (&mut self) -> &mut Reader<R>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the underlying CSV reader.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":840},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":165405,"byte_end":165426,"line_start":2057,"line_end":2057,"column_start":12,"column_end":33},"name":"StringRecordsIntoIter","qualname":"::reader::StringRecordsIntoIter","value":"StringRecordsIntoIter {  }","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":363}],"decl_id":null,"docs":" An owned iterator over records as strings.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":165724,"byte_end":165730,"line_start":2068,"line_end":2068,"column_start":12,"column_end":18},"name":"reader","qualname":"<StringRecordsIntoIter<R>>::reader","value":"fn (&self) -> &Reader<R>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the underlying CSV reader.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":165855,"byte_end":165865,"line_start":2073,"line_end":2073,"column_start":12,"column_end":22},"name":"reader_mut","qualname":"<StringRecordsIntoIter<R>>::reader_mut","value":"fn (&mut self) -> &mut Reader<R>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the underlying CSV reader.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":166002,"byte_end":166013,"line_start":2078,"line_end":2078,"column_start":12,"column_end":23},"name":"into_reader","qualname":"<StringRecordsIntoIter<R>>::into_reader","value":"fn (self) -> Reader<R>","parent":null,"children":[],"decl_id":null,"docs":" Drop this iterator and return the underlying CSV reader.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":858},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":166564,"byte_end":166581,"line_start":2099,"line_end":2099,"column_start":12,"column_end":29},"name":"StringRecordsIter","qualname":"::reader::StringRecordsIter","value":"StringRecordsIter {  }","parent":null,"children":[{"krate":0,"index":373},{"krate":0,"index":375}],"decl_id":null,"docs":" A borrowed iterator over records as strings.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":166903,"byte_end":166909,"line_start":2110,"line_end":2110,"column_start":12,"column_end":18},"name":"reader","qualname":"<StringRecordsIter<'r, R>>::reader","value":"fn (&self) -> &Reader<R>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the underlying CSV reader.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":167034,"byte_end":167044,"line_start":2115,"line_end":2115,"column_start":12,"column_end":22},"name":"reader_mut","qualname":"<StringRecordsIter<'r, R>>::reader_mut","value":"fn (&mut self) -> &mut Reader<R>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the underlying CSV reader.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":874},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":167519,"byte_end":167538,"line_start":2133,"line_end":2133,"column_start":12,"column_end":31},"name":"ByteRecordsIntoIter","qualname":"::reader::ByteRecordsIntoIter","value":"ByteRecordsIntoIter {  }","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":389}],"decl_id":null,"docs":" An owned iterator over records as raw bytes.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":167826,"byte_end":167832,"line_start":2144,"line_end":2144,"column_start":12,"column_end":18},"name":"reader","qualname":"<ByteRecordsIntoIter<R>>::reader","value":"fn (&self) -> &Reader<R>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the underlying CSV reader.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":167957,"byte_end":167967,"line_start":2149,"line_end":2149,"column_start":12,"column_end":22},"name":"reader_mut","qualname":"<ByteRecordsIntoIter<R>>::reader_mut","value":"fn (&mut self) -> &mut Reader<R>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the underlying CSV reader.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":168104,"byte_end":168115,"line_start":2154,"line_end":2154,"column_start":12,"column_end":23},"name":"into_reader","qualname":"<ByteRecordsIntoIter<R>>::into_reader","value":"fn (self) -> Reader<R>","parent":null,"children":[],"decl_id":null,"docs":" Drop this iterator and return the underlying CSV reader.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":892},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":168667,"byte_end":168682,"line_start":2175,"line_end":2175,"column_start":12,"column_end":27},"name":"ByteRecordsIter","qualname":"::reader::ByteRecordsIter","value":"ByteRecordsIter {  }","parent":null,"children":[{"krate":0,"index":399},{"krate":0,"index":401}],"decl_id":null,"docs":" A borrowed iterator over records as raw bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":168994,"byte_end":169000,"line_start":2186,"line_end":2186,"column_start":12,"column_end":18},"name":"reader","qualname":"<ByteRecordsIter<'r, R>>::reader","value":"fn (&self) -> &Reader<R>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the underlying CSV reader.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":900},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":169125,"byte_end":169135,"line_start":2191,"line_end":2191,"column_start":12,"column_end":22},"name":"reader_mut","qualname":"<ByteRecordsIter<'r, R>>::reader_mut","value":"fn (&mut self) -> &mut Reader<R>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the underlying CSV reader.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1826},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":223413,"byte_end":223425,"line_start":73,"line_end":73,"column_start":12,"column_end":24},"name":"StringRecord","qualname":"::string_record::StringRecord","value":"","parent":null,"children":[],"decl_id":null,"docs":" A single CSV record stored as valid UTF-8 bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1364},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":225172,"byte_end":225175,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"new","qualname":"<StringRecord>::new","value":"fn () -> StringRecord","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty `StringRecord`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":225151,"byte_end":225160,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1366},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":225519,"byte_end":225532,"line_start":153,"line_end":153,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<StringRecord>::with_capacity","value":"fn (buffer: usize, fields: usize) -> StringRecord","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty `StringRecord` with the given capacity.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":225498,"byte_end":225507,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1368},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":226878,"byte_end":226894,"line_start":193,"line_end":193,"column_start":12,"column_end":28},"name":"from_byte_record","qualname":"<StringRecord>::from_byte_record","value":"fn (record: ByteRecord) -> result::Result<StringRecord, FromUtf8Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `StringRecord` from a `ByteRecord`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":226857,"byte_end":226866,"line_start":192,"line_end":192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1370},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":228200,"byte_end":228222,"line_start":232,"line_end":232,"column_start":12,"column_end":34},"name":"from_byte_record_lossy","qualname":"<StringRecord>::from_byte_record_lossy","value":"fn (record: ByteRecord) -> StringRecord","parent":null,"children":[],"decl_id":null,"docs":" Lossily create a new `StringRecord` from a `ByteRecord`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":228179,"byte_end":228188,"line_start":231,"line_end":231,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1372},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":231821,"byte_end":231832,"line_start":335,"line_end":335,"column_start":12,"column_end":23},"name":"deserialize","qualname":"<StringRecord>::deserialize","value":"fn <'de, D> (&'de self, headers: Option<&'de StringRecord>) -> Result<D>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize this record.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1374},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":232445,"byte_end":232449,"line_start":357,"line_end":357,"column_start":12,"column_end":16},"name":"iter","qualname":"<StringRecord>::iter","value":"fn (&self) -> StringRecordIter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all fields in this record.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":232424,"byte_end":232433,"line_start":356,"line_end":356,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1376},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":232896,"byte_end":232899,"line_start":375,"line_end":375,"column_start":12,"column_end":15},"name":"get","qualname":"<StringRecord>::get","value":"fn (&self, i: usize) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Return the field at index `i`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":232875,"byte_end":232884,"line_start":374,"line_end":374,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1378},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":233476,"byte_end":233484,"line_start":394,"line_end":394,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<StringRecord>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if this record is empty.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":233455,"byte_end":233464,"line_start":393,"line_end":393,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1380},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":233807,"byte_end":233810,"line_start":409,"line_end":409,"column_start":12,"column_end":15},"name":"len","qualname":"<StringRecord>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of fields in this record.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":233786,"byte_end":233795,"line_start":408,"line_end":408,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1382},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":234339,"byte_end":234347,"line_start":430,"line_end":430,"column_start":12,"column_end":20},"name":"truncate","qualname":"<StringRecord>::truncate","value":"fn (&mut self, n: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Truncate this record to `n` fields.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":234318,"byte_end":234327,"line_start":429,"line_end":429,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1384},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":234853,"byte_end":234858,"line_start":450,"line_end":450,"column_start":12,"column_end":17},"name":"clear","qualname":"<StringRecord>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear this record so that it has zero fields.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":234832,"byte_end":234841,"line_start":449,"line_end":449,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1386},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":235381,"byte_end":235385,"line_start":470,"line_end":470,"column_start":12,"column_end":16},"name":"trim","qualname":"<StringRecord>::trim","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Trim the fields of this record so that leading and trailing whitespace\n is removed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1388},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":236070,"byte_end":236080,"line_start":496,"line_end":496,"column_start":12,"column_end":22},"name":"push_field","qualname":"<StringRecord>::push_field","value":"fn (&mut self, field: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Add a new field to this record.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":236049,"byte_end":236058,"line_start":495,"line_end":495,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1390},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":237433,"byte_end":237441,"line_start":539,"line_end":539,"column_start":12,"column_end":20},"name":"position","qualname":"<StringRecord>::position","value":"fn (&self) -> Option<&Position>","parent":null,"children":[],"decl_id":null,"docs":" Return the position of this record, if available.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":237412,"byte_end":237421,"line_start":538,"line_end":538,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1392},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":237971,"byte_end":237983,"line_start":560,"line_end":560,"column_start":12,"column_end":24},"name":"set_position","qualname":"<StringRecord>::set_position","value":"fn (&mut self, pos: Option<Position>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the position of this record.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":237950,"byte_end":237959,"line_start":559,"line_end":559,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1394},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":238712,"byte_end":238717,"line_start":582,"line_end":582,"column_start":12,"column_end":17},"name":"range","qualname":"<StringRecord>::range","value":"fn (&self, i: usize) -> Option<Range<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Return the start and end position of a field in this record.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":238691,"byte_end":238700,"line_start":581,"line_end":581,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1396},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":239226,"byte_end":239234,"line_start":599,"line_end":599,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<StringRecord>::as_slice","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Return the entire row as a single string slice. The slice returned\n stores all fields contiguously. The boundaries of each field can be\n determined via the `range` method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":239205,"byte_end":239214,"line_start":598,"line_end":598,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1398},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":239916,"byte_end":239930,"line_start":619,"line_end":619,"column_start":12,"column_end":26},"name":"as_byte_record","qualname":"<StringRecord>::as_byte_record","value":"fn (&self) -> &ByteRecord","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to this record's raw\n [`ByteRecord`](struct.ByteRecord.html).","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":239895,"byte_end":239904,"line_start":618,"line_end":618,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1400},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":240891,"byte_end":240907,"line_start":651,"line_end":651,"column_start":12,"column_end":28},"name":"into_byte_record","qualname":"<StringRecord>::into_byte_record","value":"fn (self) -> ByteRecord","parent":null,"children":[],"decl_id":null,"docs":" Convert this `StringRecord` into a\n [`ByteRecord`](struct.ByteRecord.html).","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":240870,"byte_end":240879,"line_start":650,"line_end":650,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1432},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":242269,"byte_end":242285,"line_start":708,"line_end":708,"column_start":12,"column_end":28},"name":"StringRecordIter","qualname":"::string_record::StringRecordIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the fields in a string record.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1448},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,116,117,116,111,114,105,97,108,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tutorial","qualname":"::tutorial","value":"/Users/pmirabel/.cargo/registry/src/github.com-1ecc6299db9ec823/csv-1.0.5/src/tutorial.rs","parent":null,"children":[],"decl_id":null,"docs":"A tutorial for handling CSV data in Rust.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1836},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,119,114,105,116,101,114,46,114,115],"byte_start":333381,"byte_end":333394,"line_start":30,"line_end":30,"column_start":12,"column_end":25},"name":"WriterBuilder","qualname":"::writer::WriterBuilder","value":"WriterBuilder {  }","parent":null,"children":[{"krate":0,"index":871},{"krate":0,"index":873},{"krate":0,"index":875},{"krate":0,"index":877}],"decl_id":null,"docs":" Builds a CSV writer with various configuration knobs.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1508},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,119,114,105,116,101,114,46,114,115],"byte_start":334520,"byte_end":334523,"line_start":73,"line_end":73,"column_start":12,"column_end":15},"name":"new","qualname":"<WriterBuilder>::new","value":"fn () -> WriterBuilder","parent":null,"children":[],"decl_id":null,"docs":" Create a new builder for configuring CSV writing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1510},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,119,114,105,116,101,114,46,114,115],"byte_start":335351,"byte_end":335360,"line_start":100,"line_end":100,"column_start":12,"column_end":21},"name":"from_path","qualname":"<WriterBuilder>::from_path","value":"fn <P> (&self, path: P) -> Result<Writer<File>>","parent":null,"children":[],"decl_id":null,"docs":" Build a CSV writer from this configuration that writes data to the\n given file path. The file is truncated if it already exists.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1512},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,119,114,105,116,101,114,46,114,115],"byte_start":336283,"byte_end":336294,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"name":"from_writer","qualname":"<WriterBuilder>::from_writer","value":"fn <W> (&self, wtr: W) -> Writer<W>","parent":null,"children":[],"decl_id":null,"docs":" Build a CSV writer from this configuration that writes data to `wtr`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1514},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,119,114,105,116,101,114,46,114,115],"byte_start":337099,"byte_end":337108,"line_start":157,"line_end":157,"column_start":12,"column_end":21},"name":"delimiter","qualname":"<WriterBuilder>::delimiter","value":"fn (&mut self, delimiter: u8) -> &mut WriterBuilder","parent":null,"children":[],"decl_id":null,"docs":" The field delimiter to use when writing CSV.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1516},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,119,114,105,116,101,114,46,114,115],"byte_start":340209,"byte_end":340220,"line_start":249,"line_end":249,"column_start":12,"column_end":23},"name":"has_headers","qualname":"<WriterBuilder>::has_headers","value":"fn (&mut self, yes: bool) -> &mut WriterBuilder","parent":null,"children":[],"decl_id":null,"docs":" Whether to write a header row before writing any other row.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1518},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,119,114,105,116,101,114,46,114,115],"byte_start":342238,"byte_end":342246,"line_start":311,"line_end":311,"column_start":12,"column_end":20},"name":"flexible","qualname":"<WriterBuilder>::flexible","value":"fn (&mut self, yes: bool) -> &mut WriterBuilder","parent":null,"children":[],"decl_id":null,"docs":" Whether the number of fields in records is allowed to change or not.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1520},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,119,114,105,116,101,114,46,114,115],"byte_start":343374,"byte_end":343384,"line_start":346,"line_end":346,"column_start":12,"column_end":22},"name":"terminator","qualname":"<WriterBuilder>::terminator","value":"fn (&mut self, term: Terminator) -> &mut WriterBuilder","parent":null,"children":[],"decl_id":null,"docs":" The record terminator to use when writing CSV.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1522},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,119,114,105,116,101,114,46,114,115],"byte_start":345478,"byte_end":345489,"line_start":410,"line_end":410,"column_start":12,"column_end":23},"name":"quote_style","qualname":"<WriterBuilder>::quote_style","value":"fn (&mut self, style: QuoteStyle) -> &mut WriterBuilder","parent":null,"children":[],"decl_id":null,"docs":" The quoting style to use when writing CSV.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1524},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,119,114,105,116,101,114,46,114,115],"byte_start":346374,"byte_end":346379,"line_start":440,"line_end":440,"column_start":12,"column_end":17},"name":"quote","qualname":"<WriterBuilder>::quote","value":"fn (&mut self, quote: u8) -> &mut WriterBuilder","parent":null,"children":[],"decl_id":null,"docs":" The quote character to use when writing CSV.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1526},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,119,114,105,116,101,114,46,114,115],"byte_start":347316,"byte_end":347328,"line_start":471,"line_end":471,"column_start":12,"column_end":24},"name":"double_quote","qualname":"<WriterBuilder>::double_quote","value":"fn (&mut self, yes: bool) -> &mut WriterBuilder","parent":null,"children":[],"decl_id":null,"docs":" Enable double quote escapes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1528},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,119,114,105,116,101,114,46,114,115],"byte_start":348464,"byte_end":348470,"line_start":506,"line_end":506,"column_start":12,"column_end":18},"name":"escape","qualname":"<WriterBuilder>::escape","value":"fn (&mut self, escape: u8) -> &mut WriterBuilder","parent":null,"children":[],"decl_id":null,"docs":" The escape character to use when writing CSV.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1530},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,119,114,105,116,101,114,46,114,115],"byte_start":348716,"byte_end":348731,"line_start":513,"line_end":513,"column_start":12,"column_end":27},"name":"buffer_capacity","qualname":"<WriterBuilder>::buffer_capacity","value":"fn (&mut self, capacity: usize) -> &mut WriterBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set the capacity (in bytes) of the internal buffer used in the CSV\n writer. This defaults to a reasonable setting.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1842},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,119,114,105,116,101,114,46,114,115],"byte_start":350102,"byte_end":350108,"line_start":546,"line_end":546,"column_start":12,"column_end":18},"name":"Writer","qualname":"::writer::Writer","value":"Writer {  }","parent":null,"children":[{"krate":0,"index":881},{"krate":0,"index":883},{"krate":0,"index":885},{"krate":0,"index":887}],"decl_id":null,"docs":" A already configured CSV writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1538},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,119,114,105,116,101,114,46,114,115],"byte_start":352856,"byte_end":352865,"line_start":631,"line_end":631,"column_start":12,"column_end":21},"name":"from_path","qualname":"<Writer<File>>::from_path","value":"fn <P> (path: P) -> Result<Writer<File>>","parent":null,"children":[],"decl_id":null,"docs":" Build a CSV writer with a default configuration that writes data to the\n given file path. The file is truncated if it already exists.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1544},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,119,114,105,116,101,114,46,114,115],"byte_start":354486,"byte_end":354497,"line_start":686,"line_end":686,"column_start":12,"column_end":23},"name":"from_writer","qualname":"<Writer<W>>::from_writer","value":"fn (wtr: W) -> Writer<W>","parent":null,"children":[],"decl_id":null,"docs":" Build a CSV writer with a default configuration that writes data to\n `wtr`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1546},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,119,114,105,116,101,114,46,114,115],"byte_start":362242,"byte_end":362251,"line_start":904,"line_end":904,"column_start":12,"column_end":21},"name":"serialize","qualname":"<Writer<W>>::serialize","value":"fn <S> (&mut self, record: S) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Serialize a single record using Serde.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1548},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,119,114,105,116,101,114,46,114,115],"byte_start":363713,"byte_end":363725,"line_start":947,"line_end":947,"column_start":12,"column_end":24},"name":"write_record","qualname":"<Writer<W>>::write_record","value":"fn <I, T> (&mut self, record: I) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write a single record.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1550},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,119,114,105,116,101,114,46,114,115],"byte_start":365207,"byte_end":365224,"line_start":989,"line_end":989,"column_start":12,"column_end":29},"name":"write_byte_record","qualname":"<Writer<W>>::write_byte_record","value":"fn (&mut self, record: &ByteRecord) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write a single `ByteRecord`.","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,119,114,105,116,101,114,46,114,115],"byte_start":365179,"byte_end":365195,"line_start":988,"line_end":988,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1552},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,119,114,105,116,101,114,46,114,115],"byte_start":368689,"byte_end":368700,"line_start":1078,"line_end":1078,"column_start":12,"column_end":23},"name":"write_field","qualname":"<Writer<W>>::write_field","value":"fn <T> (&mut self, field: T) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write a single field.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1556},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,119,114,105,116,101,114,46,114,115],"byte_start":369412,"byte_end":369417,"line_start":1098,"line_end":1098,"column_start":12,"column_end":17},"name":"flush","qualname":"<Writer<W>>::flush","value":"fn (&mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Flush the contents of the internal buffer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1558},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,119,114,105,116,101,114,46,114,115],"byte_start":369815,"byte_end":369825,"line_start":1110,"line_end":1110,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Writer<W>>::into_inner","value":"fn (mut self) -> result::Result<W, IntoInnerError<Writer<W>>>","parent":null,"children":[],"decl_id":null,"docs":" Flush the contents of the internal buffer and return the underlying\n writer.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":913},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4912,"byte_end":4918,"line_start":211,"line_end":211,"column_start":5,"column_end":11},"name":"Always","qualname":"::QuoteStyle::Always","value":"QuoteStyle::Always","parent":{"krate":0,"index":1866},"children":[],"decl_id":null,"docs":" This puts quotes around every field. Always.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":915},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5253,"byte_end":5262,"line_start":219,"line_end":219,"column_start":5,"column_end":14},"name":"Necessary","qualname":"::QuoteStyle::Necessary","value":"QuoteStyle::Necessary","parent":{"krate":0,"index":1866},"children":[],"decl_id":null,"docs":" This puts quotes around fields only when necessary.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":917},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5492,"byte_end":5502,"line_start":223,"line_end":223,"column_start":5,"column_end":15},"name":"NonNumeric","qualname":"::QuoteStyle::NonNumeric","value":"QuoteStyle::NonNumeric","parent":{"krate":0,"index":1866},"children":[],"decl_id":null,"docs":" This puts quotes around all fields that are non-numeric. Namely, when\n writing a field that does not parse as a valid float or integer, then\n quotes will be used even if they aren't strictly necessary.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":919},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5587,"byte_end":5592,"line_start":225,"line_end":225,"column_start":5,"column_end":10},"name":"Never","qualname":"::QuoteStyle::Never","value":"QuoteStyle::Never","parent":{"krate":0,"index":1866},"children":[],"decl_id":null,"docs":" This *never* writes quotes, even if it would produce invalid CSV data.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":921},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5872,"byte_end":5887,"line_start":232,"line_end":232,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::QuoteStyle::__Nonexhaustive","value":"QuoteStyle::__Nonexhaustive","parent":{"krate":0,"index":1866},"children":[],"decl_id":null,"docs":" Hints that destructuring should not be exhaustive.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1866},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4842,"byte_end":4852,"line_start":209,"line_end":209,"column_start":10,"column_end":20},"name":"QuoteStyle","qualname":"::QuoteStyle","value":"QuoteStyle::{Always, Necessary, NonNumeric, Never, __Nonexhaustive}","parent":null,"children":[{"krate":0,"index":913},{"krate":0,"index":915},{"krate":0,"index":917},{"krate":0,"index":919},{"krate":0,"index":921}],"decl_id":null,"docs":" The quoting style to use when writing CSV data.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4833,"byte_end":5890,"line_start":209,"line_end":233,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":923},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6707,"byte_end":6711,"line_start":260,"line_end":260,"column_start":5,"column_end":9},"name":"CRLF","qualname":"::Terminator::CRLF","value":"Terminator::CRLF","parent":{"krate":0,"index":1878},"children":[],"decl_id":null,"docs":" Parses `\\r`, `\\n` or `\\r\\n` as a single record terminator.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":925},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6771,"byte_end":6774,"line_start":262,"line_end":262,"column_start":5,"column_end":8},"name":"Any","qualname":"::Terminator::Any","value":"Terminator::Any(u8)","parent":{"krate":0,"index":1878},"children":[],"decl_id":null,"docs":" Parses the byte given as a record terminator.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":929},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7058,"byte_end":7073,"line_start":269,"line_end":269,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::Terminator::__Nonexhaustive","value":"Terminator::__Nonexhaustive","parent":{"krate":0,"index":1878},"children":[],"decl_id":null,"docs":" Hints that destructuring should not be exhaustive.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1878},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6623,"byte_end":6633,"line_start":258,"line_end":258,"column_start":10,"column_end":20},"name":"Terminator","qualname":"::Terminator","value":"Terminator::{CRLF, Any, __Nonexhaustive}","parent":null,"children":[{"krate":0,"index":923},{"krate":0,"index":925},{"krate":0,"index":929}],"decl_id":null,"docs":" A record terminator.","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6614,"byte_end":7076,"line_start":258,"line_end":270,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":931},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7682,"byte_end":7686,"line_start":293,"line_end":293,"column_start":5,"column_end":9},"name":"None","qualname":"::Trim::None","value":"Trim::None","parent":{"krate":0,"index":1890},"children":[],"decl_id":null,"docs":" Preserves fields and headers. This is the default.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":933},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7730,"byte_end":7737,"line_start":295,"line_end":295,"column_start":5,"column_end":12},"name":"Headers","qualname":"::Trim::Headers","value":"Trim::Headers","parent":{"krate":0,"index":1890},"children":[],"decl_id":null,"docs":" Trim whitespace from headers.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":935},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7797,"byte_end":7803,"line_start":297,"line_end":297,"column_start":5,"column_end":11},"name":"Fields","qualname":"::Trim::Fields","value":"Trim::Fields","parent":{"krate":0,"index":1890},"children":[],"decl_id":null,"docs":" Trim whitespace from fields, but not headers.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":937},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7858,"byte_end":7861,"line_start":299,"line_end":299,"column_start":5,"column_end":8},"name":"All","qualname":"::Trim::All","value":"Trim::All","parent":{"krate":0,"index":1890},"children":[],"decl_id":null,"docs":" Trim whitespace from fields and headers.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":939},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8141,"byte_end":8156,"line_start":306,"line_end":306,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::Trim::__Nonexhaustive","value":"Trim::__Nonexhaustive","parent":{"krate":0,"index":1890},"children":[],"decl_id":null,"docs":" Hints that destructuring should not be exhaustive.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1890},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7612,"byte_end":7616,"line_start":291,"line_end":291,"column_start":10,"column_end":14},"name":"Trim","qualname":"::Trim","value":"Trim::{None, Headers, Fields, All, __Nonexhaustive}","parent":null,"children":[{"krate":0,"index":931},{"krate":0,"index":933},{"krate":0,"index":935},{"krate":0,"index":937},{"krate":0,"index":939}],"decl_id":null,"docs":" The whitespace preservation behaviour when reading CSV data.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7603,"byte_end":8159,"line_start":291,"line_end":307,"column_start":1,"column_end":2}}]},{"kind":"Function","id":{"krate":0,"index":1622},"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10563,"byte_end":10577,"line_start":383,"line_end":383,"column_start":8,"column_end":22},"name":"invalid_option","qualname":"::invalid_option","value":"fn <'de, D, T> (de: D) -> result::Result<Option<T>, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" A custom Serde deserializer for possibly invalid `Option<T>` fields.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":14528,"byte_end":14538,"line_start":110,"line_end":110,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":14773,"byte_end":14783,"line_start":119,"line_end":119,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":15042,"byte_end":15052,"line_start":131,"line_end":131,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":15282,"byte_end":15292,"line_start":143,"line_end":143,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":16332,"byte_end":16342,"line_start":173,"line_end":173,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":16432,"byte_end":16442,"line_start":180,"line_end":180,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":160},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":180},{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":29534,"byte_end":29542,"line_start":620,"line_end":620,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":31164,"byte_end":31170,"line_start":672,"line_end":672,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":31263,"byte_end":31269,"line_start":679,"line_end":679,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":216},{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":32967,"byte_end":32977,"line_start":742,"line_end":742,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":33113,"byte_end":33123,"line_start":748,"line_end":748,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":33259,"byte_end":33269,"line_start":753,"line_end":753,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":33413,"byte_end":33423,"line_start":760,"line_end":760,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":33565,"byte_end":33575,"line_start":767,"line_end":767,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":33791,"byte_end":33801,"line_start":776,"line_end":776,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":34952,"byte_end":34966,"line_start":818,"line_end":818,"column_start":32,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":34997,"byte_end":35011,"line_start":820,"line_end":820,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":35663,"byte_end":35677,"line_start":848,"line_end":848,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,100,101,115,101,114,105,97,108,105,122,101,114,46,114,115],"byte_start":48586,"byte_end":48598,"line_start":103,"line_end":103,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":360},{"krate":0,"index":362},{"krate":0,"index":364},{"krate":0,"index":366},{"krate":0,"index":368},{"krate":0,"index":370},{"krate":0,"index":372},{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,100,101,115,101,114,105,97,108,105,122,101,114,46,114,115],"byte_start":49797,"byte_end":49811,"line_start":156,"line_end":156,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":382},{"krate":0,"index":384},{"krate":0,"index":386},{"krate":0,"index":388},{"krate":0,"index":390},{"krate":0,"index":392},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,100,101,115,101,114,105,97,108,105,122,101,114,46,114,115],"byte_start":51846,"byte_end":51858,"line_start":232,"line_end":232,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":402},{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":408},{"krate":0,"index":410},{"krate":0,"index":412},{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,100,101,115,101,114,105,97,108,105,122,101,114,46,114,115],"byte_start":63766,"byte_end":63782,"line_start":655,"line_end":655,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,100,101,115,101,114,105,97,108,105,122,101,114,46,114,115],"byte_start":63984,"byte_end":64000,"line_start":664,"line_end":664,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,100,101,115,101,114,105,97,108,105,122,101,114,46,114,115],"byte_start":64102,"byte_end":64118,"line_start":670,"line_end":670,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,100,101,115,101,114,105,97,108,105,122,101,114,46,114,115],"byte_start":64375,"byte_end":64395,"line_start":680,"line_end":680,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,100,101,115,101,114,105,97,108,105,122,101,114,46,114,115],"byte_start":64984,"byte_end":65000,"line_start":698,"line_end":698,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":518},{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,100,101,115,101,114,105,97,108,105,122,101,114,46,114,115],"byte_start":65271,"byte_end":65291,"line_start":710,"line_end":710,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":78576,"byte_end":78581,"line_start":30,"line_end":30,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":566},{"krate":0,"index":568},{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":81101,"byte_end":81106,"line_start":104,"line_end":104,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":81220,"byte_end":81225,"line_start":110,"line_end":110,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":81344,"byte_end":81349,"line_start":116,"line_end":116,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":582},{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":82310,"byte_end":82315,"line_start":142,"line_end":142,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":84901,"byte_end":84914,"line_start":210,"line_end":210,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":594},{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":85215,"byte_end":85228,"line_start":222,"line_end":222,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":85341,"byte_end":85354,"line_start":228,"line_end":228,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":604},{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":86157,"byte_end":86166,"line_start":253,"line_end":253,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":612},{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":86450,"byte_end":86459,"line_start":260,"line_end":260,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":86555,"byte_end":86564,"line_start":264,"line_end":264,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":87422,"byte_end":87436,"line_start":294,"line_end":294,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":630},{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":87939,"byte_end":87953,"line_start":311,"line_end":311,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":636},{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":88135,"byte_end":88149,"line_start":321,"line_end":321,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":88270,"byte_end":88284,"line_start":327,"line_end":327,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":96686,"byte_end":96699,"line_start":36,"line_end":36,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":96977,"byte_end":96990,"line_start":48,"line_end":48,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":712},{"krate":0,"index":714},{"krate":0,"index":716},{"krate":0,"index":718},{"krate":0,"index":720},{"krate":0,"index":722},{"krate":0,"index":724},{"krate":0,"index":726},{"krate":0,"index":728},{"krate":0,"index":730},{"krate":0,"index":732},{"krate":0,"index":734},{"krate":0,"index":736},{"krate":0,"index":738},{"krate":0,"index":740},{"krate":0,"index":742}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":122186,"byte_end":122192,"line_start":795,"line_end":795,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":746}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":122989,"byte_end":122995,"line_start":824,"line_end":824,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":750},{"krate":0,"index":752},{"krate":0,"index":754},{"krate":0,"index":756},{"krate":0,"index":758},{"krate":0,"index":760},{"krate":0,"index":762},{"krate":0,"index":764},{"krate":0,"index":766},{"krate":0,"index":768},{"krate":0,"index":770},{"krate":0,"index":772},{"krate":0,"index":774},{"krate":0,"index":776},{"krate":0,"index":778},{"krate":0,"index":780},{"krate":0,"index":784},{"krate":0,"index":786},{"krate":0,"index":788},{"krate":0,"index":790},{"krate":0,"index":792},{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":157185,"byte_end":157191,"line_start":1814,"line_end":1814,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":798},{"krate":0,"index":800}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":161288,"byte_end":161299,"line_start":1922,"line_end":1922,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":162492,"byte_end":162518,"line_start":1956,"line_end":1956,"column_start":40,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":810},{"krate":0,"index":812},{"krate":0,"index":814},{"krate":0,"index":816}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":163405,"byte_end":163431,"line_start":1989,"line_end":1989,"column_start":18,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":820},{"krate":0,"index":822}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":164237,"byte_end":164259,"line_start":2015,"line_end":2015,"column_start":44,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":828},{"krate":0,"index":830},{"krate":0,"index":832}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":165021,"byte_end":165043,"line_start":2043,"line_end":2043,"column_start":18,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":836},{"krate":0,"index":838}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":165496,"byte_end":165517,"line_start":2062,"line_end":2062,"column_start":19,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":844},{"krate":0,"index":846},{"krate":0,"index":848},{"krate":0,"index":850}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":166092,"byte_end":166113,"line_start":2083,"line_end":2083,"column_start":32,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":854},{"krate":0,"index":856}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":166671,"byte_end":166688,"line_start":2104,"line_end":2104,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":862},{"krate":0,"index":864},{"krate":0,"index":866}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":167142,"byte_end":167159,"line_start":2120,"line_end":2120,"column_start":36,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":870},{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":167606,"byte_end":167625,"line_start":2138,"line_end":2138,"column_start":19,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":878},{"krate":0,"index":880},{"krate":0,"index":882},{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":168194,"byte_end":168213,"line_start":2159,"line_end":2159,"column_start":32,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":888},{"krate":0,"index":890}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":168770,"byte_end":168785,"line_start":2180,"line_end":2180,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":896},{"krate":0,"index":898},{"krate":0,"index":900}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":169233,"byte_end":169248,"line_start":2196,"line_end":2196,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":904},{"krate":0,"index":906}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,101,114,105,97,108,105,122,101,114,46,114,115],"byte_start":193685,"byte_end":193690,"line_start":335,"line_end":335,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,101,114,105,97,108,105,122,101,114,46,114,115],"byte_start":197801,"byte_end":197809,"line_start":429,"line_end":429,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1126},{"krate":0,"index":1128},{"krate":0,"index":1132},{"krate":0,"index":1136}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":223459,"byte_end":223471,"line_start":75,"line_end":75,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1336}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":223618,"byte_end":223630,"line_start":81,"line_end":81,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1340}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":223923,"byte_end":223935,"line_start":93,"line_end":93,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1348}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":224199,"byte_end":224211,"line_start":105,"line_end":105,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1356}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":224402,"byte_end":224414,"line_start":112,"line_end":112,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1360}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":224508,"byte_end":224520,"line_start":119,"line_end":119,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1364},{"krate":0,"index":1366},{"krate":0,"index":1368},{"krate":0,"index":1370},{"krate":0,"index":1372},{"krate":0,"index":1374},{"krate":0,"index":1376},{"krate":0,"index":1378},{"krate":0,"index":1380},{"krate":0,"index":1382},{"krate":0,"index":1384},{"krate":0,"index":1386},{"krate":0,"index":1388},{"krate":0,"index":1390},{"krate":0,"index":1392},{"krate":0,"index":1394},{"krate":0,"index":1396},{"krate":0,"index":1398},{"krate":0,"index":1400}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":240981,"byte_end":240993,"line_start":656,"line_end":656,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1404},{"krate":0,"index":1406}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":241136,"byte_end":241148,"line_start":662,"line_end":662,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1410}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":241306,"byte_end":241318,"line_start":669,"line_end":669,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1414}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":241463,"byte_end":241475,"line_start":676,"line_end":676,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1418}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":241694,"byte_end":241706,"line_start":685,"line_end":685,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1422}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":242334,"byte_end":242350,"line_start":710,"line_end":710,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1436},{"krate":0,"index":1438},{"krate":0,"index":1440},{"krate":0,"index":1442}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":242815,"byte_end":242831,"line_start":732,"line_end":732,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1446}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,119,114,105,116,101,114,46,114,115],"byte_start":333513,"byte_end":333526,"line_start":37,"line_end":37,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1504}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,119,114,105,116,101,114,46,114,115],"byte_start":333759,"byte_end":333772,"line_start":48,"line_end":48,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1508},{"krate":0,"index":1510},{"krate":0,"index":1512},{"krate":0,"index":1514},{"krate":0,"index":1516},{"krate":0,"index":1518},{"krate":0,"index":1520},{"krate":0,"index":1522},{"krate":0,"index":1524},{"krate":0,"index":1526},{"krate":0,"index":1528},{"krate":0,"index":1530}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,119,114,105,116,101,114,46,114,115],"byte_start":351939,"byte_end":351945,"line_start":599,"line_end":599,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1534}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,119,114,105,116,101,114,46,114,115],"byte_start":352090,"byte_end":352096,"line_start":607,"line_end":607,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1538}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,119,114,105,116,101,114,46,114,115],"byte_start":352990,"byte_end":352996,"line_start":636,"line_end":636,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1542},{"krate":0,"index":1544},{"krate":0,"index":1546},{"krate":0,"index":1548},{"krate":0,"index":1550},{"krate":0,"index":1552},{"krate":0,"index":1554},{"krate":0,"index":1556},{"krate":0,"index":1558},{"krate":0,"index":1560},{"krate":0,"index":1562},{"krate":0,"index":1564},{"krate":0,"index":1566}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,119,114,105,116,101,114,46,114,115],"byte_start":373042,"byte_end":373059,"line_start":1205,"line_end":1205,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1572},{"krate":0,"index":1574},{"krate":0,"index":1576}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,119,114,105,116,101,114,46,114,115],"byte_start":373892,"byte_end":373909,"line_start":1232,"line_end":1232,"column_start":39,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1580}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,119,114,105,116,101,114,46,114,115],"byte_start":374226,"byte_end":374243,"line_start":1244,"line_end":1244,"column_start":33,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1584}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,119,114,105,116,101,114,46,114,115],"byte_start":374336,"byte_end":374342,"line_start":1250,"line_end":1250,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1588},{"krate":0,"index":1590},{"krate":0,"index":1592},{"krate":0,"index":1594}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5897,"byte_end":5907,"line_start":235,"line_end":235,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1598}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6315,"byte_end":6325,"line_start":247,"line_end":247,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1602}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7083,"byte_end":7093,"line_start":272,"line_end":272,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1606}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7417,"byte_end":7427,"line_start":283,"line_end":283,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1610}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8166,"byte_end":8170,"line_start":309,"line_end":309,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1614},{"krate":0,"index":1616}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8398,"byte_end":8402,"line_start":319,"line_end":319,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1620}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4663,"byte_end":4671,"line_start":200,"line_end":200,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":648}},{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4728,"byte_end":4736,"line_start":204,"line_end":204,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1448}}],"macro_refs":[],"relations":[{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":14528,"byte_end":14538,"line_start":110,"line_end":110,"column_start":20,"column_end":30},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":1624},"to":{"krate":2,"index":2328}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":14773,"byte_end":14783,"line_start":119,"line_end":119,"column_start":44,"column_end":54},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":1624},"to":{"krate":2,"index":2328}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":15042,"byte_end":15052,"line_start":131,"line_end":131,"column_start":41,"column_end":51},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":1624},"to":{"krate":2,"index":2328}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":15282,"byte_end":15292,"line_start":143,"line_end":143,"column_start":21,"column_end":31},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":1624},"to":{"krate":2,"index":7966}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":16332,"byte_end":16342,"line_start":173,"line_end":173,"column_start":18,"column_end":28},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":1624},"to":{"krate":2,"index":2550}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":16432,"byte_end":16442,"line_start":180,"line_end":180,"column_start":6,"column_end":16},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":1624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":29534,"byte_end":29542,"line_start":620,"line_end":620,"column_start":6,"column_end":14},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":1654},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":31164,"byte_end":31170,"line_start":672,"line_end":672,"column_start":18,"column_end":24},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":1674},"to":{"krate":2,"index":2550}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":31263,"byte_end":31269,"line_start":679,"line_end":679,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":1674},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":32967,"byte_end":32977,"line_start":742,"line_end":742,"column_start":28,"column_end":38},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":1624},"to":{"krate":2,"index":1988}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":33113,"byte_end":33123,"line_start":748,"line_end":748,"column_start":29,"column_end":39},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":1624},"to":{"krate":2,"index":2572}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":33259,"byte_end":33269,"line_start":753,"line_end":753,"column_start":39,"column_end":49},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":1624},"to":{"krate":2,"index":2572}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":33413,"byte_end":33423,"line_start":760,"line_end":760,"column_start":44,"column_end":54},"kind":{"variant":"Impl","fields":[12]},"from":{"krate":0,"index":1624},"to":{"krate":2,"index":2572}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":33565,"byte_end":33575,"line_start":767,"line_end":767,"column_start":42,"column_end":52},"kind":{"variant":"Impl","fields":[13]},"from":{"krate":0,"index":1624},"to":{"krate":2,"index":4194}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":33791,"byte_end":33801,"line_start":776,"line_end":776,"column_start":36,"column_end":46},"kind":{"variant":"Impl","fields":[14]},"from":{"krate":0,"index":1624},"to":{"krate":2,"index":4214}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":34952,"byte_end":34966,"line_start":818,"line_end":818,"column_start":32,"column_end":46},"kind":{"variant":"Impl","fields":[15]},"from":{"krate":0,"index":246},"to":{"krate":2,"index":4236}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":34997,"byte_end":35011,"line_start":820,"line_end":820,"column_start":23,"column_end":37},"kind":{"variant":"Impl","fields":[16]},"from":{"krate":0,"index":246},"to":{"krate":2,"index":3838}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,98,121,116,101,95,114,101,99,111,114,100,46,114,115],"byte_start":35663,"byte_end":35677,"line_start":848,"line_end":848,"column_start":34,"column_end":48},"kind":{"variant":"Impl","fields":[17]},"from":{"krate":0,"index":246},"to":{"krate":2,"index":4222}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,100,101,115,101,114,105,97,108,105,122,101,114,46,114,115],"byte_start":48586,"byte_end":48598,"line_start":103,"line_end":103,"column_start":44,"column_end":56},"kind":{"variant":"Impl","fields":[18]},"from":{"krate":0,"index":356},"to":{"krate":0,"index":338}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,100,101,115,101,114,105,97,108,105,122,101,114,46,114,115],"byte_start":49797,"byte_end":49811,"line_start":156,"line_end":156,"column_start":27,"column_end":41},"kind":{"variant":"Impl","fields":[19]},"from":{"krate":0,"index":376},"to":{"krate":0,"index":338}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,100,101,115,101,114,105,97,108,105,122,101,114,46,114,115],"byte_start":51846,"byte_end":51858,"line_start":232,"line_end":232,"column_start":27,"column_end":39},"kind":{"variant":"Impl","fields":[20]},"from":{"krate":0,"index":396},"to":{"krate":0,"index":338}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,100,101,115,101,114,105,97,108,105,122,101,114,46,114,115],"byte_start":63766,"byte_end":63782,"line_start":655,"line_end":655,"column_start":21,"column_end":37},"kind":{"variant":"Impl","fields":[21]},"from":{"krate":0,"index":1710},"to":{"krate":14,"index":7536}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,100,101,115,101,114,105,97,108,105,122,101,114,46,114,115],"byte_start":63984,"byte_end":64000,"line_start":664,"line_end":664,"column_start":19,"column_end":35},"kind":{"variant":"Impl","fields":[22]},"from":{"krate":0,"index":1710},"to":{"krate":1,"index":2344}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,100,101,115,101,114,105,97,108,105,122,101,114,46,114,115],"byte_start":64102,"byte_end":64118,"line_start":670,"line_end":670,"column_start":23,"column_end":39},"kind":{"variant":"Impl","fields":[23]},"from":{"krate":0,"index":1710},"to":{"krate":2,"index":7970}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,100,101,115,101,114,105,97,108,105,122,101,114,46,114,115],"byte_start":64375,"byte_end":64395,"line_start":680,"line_end":680,"column_start":23,"column_end":43},"kind":{"variant":"Impl","fields":[24]},"from":{"krate":0,"index":1730},"to":{"krate":2,"index":7970}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,100,101,115,101,114,105,97,108,105,122,101,114,46,114,115],"byte_start":64984,"byte_end":65000,"line_start":698,"line_end":698,"column_start":6,"column_end":22},"kind":{"variant":"Impl","fields":[25]},"from":{"krate":0,"index":1710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,100,101,115,101,114,105,97,108,105,122,101,114,46,114,115],"byte_start":65271,"byte_end":65291,"line_start":710,"line_end":710,"column_start":6,"column_end":26},"kind":{"variant":"Impl","fields":[26]},"from":{"krate":0,"index":1730},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":78576,"byte_end":78581,"line_start":30,"line_end":30,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[27]},"from":{"krate":0,"index":1750},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":81101,"byte_end":81106,"line_start":104,"line_end":104,"column_start":26,"column_end":31},"kind":{"variant":"Impl","fields":[28]},"from":{"krate":0,"index":1750},"to":{"krate":2,"index":2572}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":81220,"byte_end":81225,"line_start":110,"line_end":110,"column_start":26,"column_end":31},"kind":{"variant":"Impl","fields":[29]},"from":{"krate":1,"index":3702},"to":{"krate":2,"index":2572}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":81344,"byte_end":81349,"line_start":116,"line_end":116,"column_start":19,"column_end":24},"kind":{"variant":"Impl","fields":[30]},"from":{"krate":0,"index":1750},"to":{"krate":1,"index":2344}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":82310,"byte_end":82315,"line_start":142,"line_end":142,"column_start":23,"column_end":28},"kind":{"variant":"Impl","fields":[31]},"from":{"krate":0,"index":1750},"to":{"krate":2,"index":7970}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":84901,"byte_end":84914,"line_start":210,"line_end":210,"column_start":6,"column_end":19},"kind":{"variant":"Impl","fields":[32]},"from":{"krate":0,"index":1762},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":85215,"byte_end":85228,"line_start":222,"line_end":222,"column_start":23,"column_end":36},"kind":{"variant":"Impl","fields":[33]},"from":{"krate":0,"index":1762},"to":{"krate":2,"index":7970}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":85341,"byte_end":85354,"line_start":228,"line_end":228,"column_start":19,"column_end":32},"kind":{"variant":"Impl","fields":[34]},"from":{"krate":0,"index":1762},"to":{"krate":1,"index":2344}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":86157,"byte_end":86166,"line_start":253,"line_end":253,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[35]},"from":{"krate":0,"index":1782},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":86450,"byte_end":86459,"line_start":260,"line_end":260,"column_start":19,"column_end":28},"kind":{"variant":"Impl","fields":[36]},"from":{"krate":0,"index":1782},"to":{"krate":1,"index":2344}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":86555,"byte_end":86564,"line_start":264,"line_end":264,"column_start":23,"column_end":32},"kind":{"variant":"Impl","fields":[37]},"from":{"krate":0,"index":1782},"to":{"krate":2,"index":7970}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":87422,"byte_end":87436,"line_start":294,"line_end":294,"column_start":9,"column_end":23},"kind":{"variant":"Impl","fields":[38]},"from":{"krate":0,"index":624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":87939,"byte_end":87953,"line_start":311,"line_end":311,"column_start":39,"column_end":53},"kind":{"variant":"Impl","fields":[39]},"from":{"krate":0,"index":624},"to":{"krate":1,"index":2344}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":88135,"byte_end":88149,"line_start":321,"line_end":321,"column_start":26,"column_end":40},"kind":{"variant":"Impl","fields":[40]},"from":{"krate":0,"index":624},"to":{"krate":2,"index":7970}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":88270,"byte_end":88284,"line_start":327,"line_end":327,"column_start":24,"column_end":38},"kind":{"variant":"Impl","fields":[41]},"from":{"krate":0,"index":624},"to":{"krate":2,"index":7966}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":96686,"byte_end":96699,"line_start":36,"line_end":36,"column_start":18,"column_end":31},"kind":{"variant":"Impl","fields":[42]},"from":{"krate":0,"index":1802},"to":{"krate":2,"index":2550}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":96977,"byte_end":96990,"line_start":48,"line_end":48,"column_start":6,"column_end":19},"kind":{"variant":"Impl","fields":[43]},"from":{"krate":0,"index":1802},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":122186,"byte_end":122192,"line_start":795,"line_end":795,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[44]},"from":{"krate":0,"index":1808},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":122989,"byte_end":122995,"line_start":824,"line_end":824,"column_start":19,"column_end":25},"kind":{"variant":"Impl","fields":[45]},"from":{"krate":0,"index":1808},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":157185,"byte_end":157191,"line_start":1814,"line_end":1814,"column_start":30,"column_end":36},"kind":{"variant":"Impl","fields":[46]},"from":{"krate":0,"index":1808},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":161288,"byte_end":161299,"line_start":1922,"line_end":1922,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[47]},"from":{"krate":0,"index":1814},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":162492,"byte_end":162518,"line_start":1956,"line_end":1956,"column_start":40,"column_end":66},"kind":{"variant":"Impl","fields":[48]},"from":{"krate":0,"index":806},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":163405,"byte_end":163431,"line_start":1989,"line_end":1989,"column_start":18,"column_end":44},"kind":{"variant":"Impl","fields":[49]},"from":{"krate":0,"index":806},"to":{"krate":2,"index":3838}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":164237,"byte_end":164259,"line_start":2015,"line_end":2015,"column_start":44,"column_end":66},"kind":{"variant":"Impl","fields":[50]},"from":{"krate":0,"index":824},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":165021,"byte_end":165043,"line_start":2043,"line_end":2043,"column_start":18,"column_end":40},"kind":{"variant":"Impl","fields":[51]},"from":{"krate":0,"index":824},"to":{"krate":2,"index":3838}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":165496,"byte_end":165517,"line_start":2062,"line_end":2062,"column_start":19,"column_end":40},"kind":{"variant":"Impl","fields":[52]},"from":{"krate":0,"index":840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":166092,"byte_end":166113,"line_start":2083,"line_end":2083,"column_start":32,"column_end":53},"kind":{"variant":"Impl","fields":[53]},"from":{"krate":0,"index":840},"to":{"krate":2,"index":3838}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":166671,"byte_end":166688,"line_start":2104,"line_end":2104,"column_start":23,"column_end":40},"kind":{"variant":"Impl","fields":[54]},"from":{"krate":0,"index":858},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":167142,"byte_end":167159,"line_start":2120,"line_end":2120,"column_start":36,"column_end":53},"kind":{"variant":"Impl","fields":[55]},"from":{"krate":0,"index":858},"to":{"krate":2,"index":3838}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":167606,"byte_end":167625,"line_start":2138,"line_end":2138,"column_start":19,"column_end":38},"kind":{"variant":"Impl","fields":[56]},"from":{"krate":0,"index":874},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":168194,"byte_end":168213,"line_start":2159,"line_end":2159,"column_start":32,"column_end":51},"kind":{"variant":"Impl","fields":[57]},"from":{"krate":0,"index":874},"to":{"krate":2,"index":3838}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":168770,"byte_end":168785,"line_start":2180,"line_end":2180,"column_start":23,"column_end":38},"kind":{"variant":"Impl","fields":[58]},"from":{"krate":0,"index":892},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,114,101,97,100,101,114,46,114,115],"byte_start":169233,"byte_end":169248,"line_start":2196,"line_end":2196,"column_start":36,"column_end":51},"kind":{"variant":"Impl","fields":[59]},"from":{"krate":0,"index":892},"to":{"krate":2,"index":3838}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,101,114,105,97,108,105,122,101,114,46,114,115],"byte_start":193685,"byte_end":193690,"line_start":335,"line_end":335,"column_start":21,"column_end":26},"kind":{"variant":"Impl","fields":[60]},"from":{"krate":0,"index":1750},"to":{"krate":14,"index":7908}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,101,114,105,97,108,105,122,101,114,46,114,115],"byte_start":197801,"byte_end":197809,"line_start":429,"line_end":429,"column_start":24,"column_end":32},"kind":{"variant":"Impl","fields":[61]},"from":{"krate":0,"index":1122},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":223459,"byte_end":223471,"line_start":75,"line_end":75,"column_start":20,"column_end":32},"kind":{"variant":"Impl","fields":[62]},"from":{"krate":0,"index":1826},"to":{"krate":2,"index":2328}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":223618,"byte_end":223630,"line_start":81,"line_end":81,"column_start":44,"column_end":56},"kind":{"variant":"Impl","fields":[63]},"from":{"krate":0,"index":1826},"to":{"krate":2,"index":2328}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":223923,"byte_end":223935,"line_start":93,"line_end":93,"column_start":41,"column_end":53},"kind":{"variant":"Impl","fields":[64]},"from":{"krate":0,"index":1826},"to":{"krate":2,"index":2328}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":224199,"byte_end":224211,"line_start":105,"line_end":105,"column_start":21,"column_end":33},"kind":{"variant":"Impl","fields":[65]},"from":{"krate":0,"index":1826},"to":{"krate":2,"index":7966}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":224402,"byte_end":224414,"line_start":112,"line_end":112,"column_start":18,"column_end":30},"kind":{"variant":"Impl","fields":[66]},"from":{"krate":0,"index":1826},"to":{"krate":2,"index":2550}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":224508,"byte_end":224520,"line_start":119,"line_end":119,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[67]},"from":{"krate":0,"index":1826},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":240981,"byte_end":240993,"line_start":656,"line_end":656,"column_start":28,"column_end":40},"kind":{"variant":"Impl","fields":[68]},"from":{"krate":0,"index":1826},"to":{"krate":2,"index":1988}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":241136,"byte_end":241148,"line_start":662,"line_end":662,"column_start":38,"column_end":50},"kind":{"variant":"Impl","fields":[69]},"from":{"krate":0,"index":1826},"to":{"krate":2,"index":2572}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":241306,"byte_end":241318,"line_start":669,"line_end":669,"column_start":43,"column_end":55},"kind":{"variant":"Impl","fields":[70]},"from":{"krate":0,"index":1826},"to":{"krate":2,"index":2572}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":241463,"byte_end":241475,"line_start":676,"line_end":676,"column_start":41,"column_end":53},"kind":{"variant":"Impl","fields":[71]},"from":{"krate":0,"index":1826},"to":{"krate":2,"index":4194}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":241694,"byte_end":241706,"line_start":685,"line_end":685,"column_start":35,"column_end":47},"kind":{"variant":"Impl","fields":[72]},"from":{"krate":0,"index":1826},"to":{"krate":2,"index":4214}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":242334,"byte_end":242350,"line_start":710,"line_end":710,"column_start":23,"column_end":39},"kind":{"variant":"Impl","fields":[73]},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":3838}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,115,116,114,105,110,103,95,114,101,99,111,114,100,46,114,115],"byte_start":242815,"byte_end":242831,"line_start":732,"line_end":732,"column_start":34,"column_end":50},"kind":{"variant":"Impl","fields":[74]},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":4222}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,119,114,105,116,101,114,46,114,115],"byte_start":333513,"byte_end":333526,"line_start":37,"line_end":37,"column_start":18,"column_end":31},"kind":{"variant":"Impl","fields":[75]},"from":{"krate":0,"index":1836},"to":{"krate":2,"index":2550}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,119,114,105,116,101,114,46,114,115],"byte_start":333759,"byte_end":333772,"line_start":48,"line_end":48,"column_start":6,"column_end":19},"kind":{"variant":"Impl","fields":[76]},"from":{"krate":0,"index":1836},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,119,114,105,116,101,114,46,114,115],"byte_start":351939,"byte_end":351945,"line_start":599,"line_end":599,"column_start":29,"column_end":35},"kind":{"variant":"Impl","fields":[77]},"from":{"krate":0,"index":1842},"to":{"krate":2,"index":1922}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,119,114,105,116,101,114,46,114,115],"byte_start":352090,"byte_end":352096,"line_start":607,"line_end":607,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[78]},"from":{"krate":0,"index":1842},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,119,114,105,116,101,114,46,114,115],"byte_start":352990,"byte_end":352996,"line_start":636,"line_end":636,"column_start":20,"column_end":26},"kind":{"variant":"Impl","fields":[79]},"from":{"krate":0,"index":1842},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,119,114,105,116,101,114,46,114,115],"byte_start":373042,"byte_end":373059,"line_start":1205,"line_end":1205,"column_start":24,"column_end":41},"kind":{"variant":"Impl","fields":[80]},"from":{"krate":0,"index":1568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,119,114,105,116,101,114,46,114,115],"byte_start":373892,"byte_end":373909,"line_start":1232,"line_end":1232,"column_start":39,"column_end":56},"kind":{"variant":"Impl","fields":[81]},"from":{"krate":0,"index":1568},"to":{"krate":2,"index":7906}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,119,114,105,116,101,114,46,114,115],"byte_start":374226,"byte_end":374243,"line_start":1244,"line_end":1244,"column_start":33,"column_end":50},"kind":{"variant":"Impl","fields":[82]},"from":{"krate":0,"index":1568},"to":{"krate":2,"index":1922}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,119,114,105,116,101,114,46,114,115],"byte_start":374336,"byte_end":374342,"line_start":1250,"line_end":1250,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[83]},"from":{"krate":0,"index":1860},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5897,"byte_end":5907,"line_start":235,"line_end":235,"column_start":6,"column_end":16},"kind":{"variant":"Impl","fields":[84]},"from":{"krate":0,"index":1866},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6315,"byte_end":6325,"line_start":247,"line_end":247,"column_start":18,"column_end":28},"kind":{"variant":"Impl","fields":[85]},"from":{"krate":0,"index":1866},"to":{"krate":2,"index":2550}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7083,"byte_end":7093,"line_start":272,"line_end":272,"column_start":6,"column_end":16},"kind":{"variant":"Impl","fields":[86]},"from":{"krate":0,"index":1878},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7417,"byte_end":7427,"line_start":283,"line_end":283,"column_start":18,"column_end":28},"kind":{"variant":"Impl","fields":[87]},"from":{"krate":0,"index":1878},"to":{"krate":2,"index":2550}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8166,"byte_end":8170,"line_start":309,"line_end":309,"column_start":6,"column_end":10},"kind":{"variant":"Impl","fields":[88]},"from":{"krate":0,"index":1890},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,112,109,105,114,97,98,101,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,115,118,45,49,46,48,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8398,"byte_end":8402,"line_start":319,"line_end":319,"column_start":18,"column_end":22},"kind":{"variant":"Impl","fields":[89]},"from":{"krate":0,"index":1890},"to":{"krate":2,"index":2550}}]}